[
    {
        "label": "asyncio",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "asyncio",
        "description": "asyncio",
        "detail": "asyncio",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "modules",
        "importPath": "sys",
        "description": "sys",
        "isExtraImport": true,
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "flet",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "flet",
        "description": "flet",
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Icons",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "BorderSide",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "# Added BorderSide",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "NavigationBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "# Added NavigationBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "BorderSide",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "BorderSide",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "# Added Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ColorScheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "TextStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "ButtonStyle",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "RoundedRectangleBorder",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "CardTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "DividerTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "AppBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "SnackBarTheme",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "app",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "Page",
        "importPath": "flet",
        "description": "flet",
        "isExtraImport": true,
        "detail": "flet",
        "documentation": {}
    },
    {
        "label": "threading",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "threading",
        "description": "threading",
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Type",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "ThemeManager",
        "importPath": "core",
        "description": "core",
        "isExtraImport": true,
        "detail": "core",
        "documentation": {}
    },
    {
        "label": "UnifiedGuardian",
        "importPath": "core",
        "description": "core",
        "isExtraImport": true,
        "detail": "core",
        "documentation": {}
    },
    {
        "label": "Core",
        "importPath": "core",
        "description": "core",
        "isExtraImport": true,
        "detail": "core",
        "documentation": {}
    },
    {
        "label": "Core",
        "importPath": "core",
        "description": "core",
        "isExtraImport": true,
        "detail": "core",
        "documentation": {}
    },
    {
        "label": "Core",
        "importPath": "core",
        "description": "core",
        "isExtraImport": true,
        "detail": "core",
        "documentation": {}
    },
    {
        "label": "Core",
        "importPath": "core",
        "description": "core",
        "isExtraImport": true,
        "detail": "core",
        "documentation": {}
    },
    {
        "label": "Core",
        "importPath": "core",
        "description": "core",
        "isExtraImport": true,
        "detail": "core",
        "documentation": {}
    },
    {
        "label": "BaseModule",
        "importPath": "modules",
        "description": "modules",
        "isExtraImport": true,
        "detail": "modules",
        "documentation": {}
    },
    {
        "label": "NotesModule",
        "importPath": "modules",
        "description": "modules",
        "isExtraImport": true,
        "detail": "modules",
        "documentation": {}
    },
    {
        "label": "TaskModule",
        "importPath": "modules",
        "description": "modules",
        "isExtraImport": true,
        "detail": "modules",
        "documentation": {}
    },
    {
        "label": "FlashcardModule",
        "importPath": "modules",
        "description": "modules",
        "isExtraImport": true,
        "detail": "modules",
        "documentation": {}
    },
    {
        "label": "ProgressModule",
        "importPath": "modules",
        "description": "modules",
        "isExtraImport": true,
        "detail": "modules",
        "documentation": {}
    },
    {
        "label": "SettingsModule",
        "importPath": "modules",
        "description": "modules",
        "isExtraImport": true,
        "detail": "modules",
        "documentation": {}
    },
    {
        "label": "StatisticsModule",
        "importPath": "modules",
        "description": "modules",
        "isExtraImport": true,
        "detail": "modules",
        "documentation": {}
    },
    {
        "label": "NotesModule",
        "importPath": "modules",
        "description": "modules",
        "isExtraImport": true,
        "detail": "modules",
        "documentation": {}
    },
    {
        "label": "FlashcardModule",
        "importPath": "modules",
        "description": "modules",
        "isExtraImport": true,
        "detail": "modules",
        "documentation": {}
    },
    {
        "label": "TaskModule",
        "importPath": "modules",
        "description": "modules",
        "isExtraImport": true,
        "detail": "modules",
        "documentation": {}
    },
    {
        "label": "ProgressModule",
        "importPath": "modules",
        "description": "modules",
        "isExtraImport": true,
        "detail": "modules",
        "documentation": {}
    },
    {
        "label": "SettingsModule",
        "importPath": "modules",
        "description": "modules",
        "isExtraImport": true,
        "detail": "modules",
        "documentation": {}
    },
    {
        "label": "StatisticsModule",
        "importPath": "modules",
        "description": "modules",
        "isExtraImport": true,
        "detail": "modules",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "ast",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "ast",
        "description": "ast",
        "detail": "ast",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "aiofiles",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "aiofiles",
        "description": "aiofiles",
        "detail": "aiofiles",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Observer",
        "importPath": "watchdog.observers",
        "description": "watchdog.observers",
        "isExtraImport": true,
        "detail": "watchdog.observers",
        "documentation": {}
    },
    {
        "label": "FileSystemEventHandler",
        "importPath": "watchdog.events",
        "description": "watchdog.events",
        "isExtraImport": true,
        "detail": "watchdog.events",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "black",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "black",
        "description": "black",
        "detail": "black",
        "documentation": {}
    },
    {
        "label": "autopep8",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "autopep8",
        "description": "autopep8",
        "detail": "autopep8",
        "documentation": {}
    },
    {
        "label": "parse_module",
        "importPath": "libcst",
        "description": "libcst",
        "isExtraImport": true,
        "detail": "libcst",
        "documentation": {}
    },
    {
        "label": "MetadataWrapper",
        "importPath": "libcst",
        "description": "libcst",
        "isExtraImport": true,
        "detail": "libcst",
        "documentation": {}
    },
    {
        "label": "CodemodContext",
        "importPath": "libcst.codemod",
        "description": "libcst.codemod",
        "isExtraImport": true,
        "detail": "libcst.codemod",
        "documentation": {}
    },
    {
        "label": "VisitorBasedCodemodCommand",
        "importPath": "libcst.codemod",
        "description": "libcst.codemod",
        "isExtraImport": true,
        "detail": "libcst.codemod",
        "documentation": {}
    },
    {
        "label": "hashlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "hashlib",
        "description": "hashlib",
        "detail": "hashlib",
        "documentation": {}
    },
    {
        "label": "AutoTokenizer",
        "importPath": "transformers",
        "description": "transformers",
        "isExtraImport": true,
        "detail": "transformers",
        "documentation": {}
    },
    {
        "label": "AutoModel",
        "importPath": "transformers",
        "description": "transformers",
        "isExtraImport": true,
        "detail": "transformers",
        "documentation": {}
    },
    {
        "label": "humanist",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "fluent",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "cupertino",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "corporate_blue",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "# Assuming corporate.py was meant to be corporate_blue.py\r\n    midnight",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "material",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "ayu_mirage",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "catppuccin_mocha",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "dracula",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "emerald_light_oak",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "everforest_dark",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "gemini_inspired",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "github_dark",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "github_light",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "# Assuming github.py was github_light.py\r\n    google",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "gruvbox_dark",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "modern_classic",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "monokai",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "nord",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "office_dark_blue",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "one_dark_pro",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "solarized_light",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "tokyo_night",
        "importPath": "themes",
        "description": "themes",
        "isExtraImport": true,
        "detail": "themes",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "OPTICS",
        "importPath": "sklearn.cluster",
        "description": "sklearn.cluster",
        "isExtraImport": true,
        "detail": "sklearn.cluster",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "for Core type hint",
        "importPath": "core import Core  # Added",
        "description": "core import Core  # Added",
        "isExtraImport": true,
        "detail": "core import Core  # Added",
        "documentation": {}
    },
    {
        "label": "for Core type hint",
        "importPath": "core import Core  # Added",
        "description": "core import Core  # Added",
        "isExtraImport": true,
        "detail": "core import Core  # Added",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "NoteCreate",
        "importPath": "schemas",
        "description": "schemas",
        "isExtraImport": true,
        "detail": "schemas",
        "documentation": {}
    },
    {
        "label": "Note",
        "importPath": "schemas",
        "description": "schemas",
        "isExtraImport": true,
        "detail": "schemas",
        "documentation": {}
    },
    {
        "label": "TaskCreate",
        "importPath": "schemas",
        "description": "schemas",
        "isExtraImport": true,
        "detail": "schemas",
        "documentation": {}
    },
    {
        "label": "ThemeManager",
        "importPath": "core.theme_manager",
        "description": "core.theme_manager",
        "isExtraImport": true,
        "detail": "core.theme_manager",
        "documentation": {}
    },
    {
        "label": "ThemeManager",
        "importPath": "core.theme_manager",
        "description": "core.theme_manager",
        "isExtraImport": true,
        "detail": "core.theme_manager",
        "documentation": {}
    },
    {
        "label": "contextlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "contextlib",
        "description": "contextlib",
        "detail": "contextlib",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "openai",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "openai",
        "description": "openai",
        "detail": "openai",
        "documentation": {}
    },
    {
        "label": "fuzz",
        "importPath": "fuzzywuzzy",
        "description": "fuzzywuzzy",
        "isExtraImport": true,
        "detail": "fuzzywuzzy",
        "documentation": {}
    },
    {
        "label": "inspect",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "inspect",
        "description": "inspect",
        "detail": "inspect",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "MagicMock",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "StudyOS",
        "importPath": "core.app",
        "description": "core.app",
        "isExtraImport": true,
        "detail": "core.app",
        "documentation": {}
    },
    {
        "label": "StudyOS",
        "importPath": "core.app",
        "description": "core.app",
        "isExtraImport": true,
        "detail": "core.app",
        "documentation": {}
    },
    {
        "label": "Core",
        "kind": 6,
        "importPath": "core.app",
        "description": "core.app",
        "peekOfCode": "class Core:\n    \"\"\"Central service container\"\"\"\n    def __init__(self, page: ft.Page):\n        self.page = page\n        self.theme_manager = ThemeManager(page)\n        self.module_registry = ModuleRegistry()\n        self.guardian = UnifiedGuardian()  # Instantiate UnifiedGuardian\n# This async main seems unused by the ft.app(target=main) at the bottom, which uses the sync main.\n# async def main(page: ft.Page):\n#     # This was the previous approach for starting guardian, kept for reference",
        "detail": "core.app",
        "documentation": {}
    },
    {
        "label": "ModuleRegistry",
        "kind": 6,
        "importPath": "core.app",
        "description": "core.app",
        "peekOfCode": "class ModuleRegistry:\n    \"\"\"Dependency injection container for modules\"\"\"\n    def __init__(self):\n        self._modules: Dict[str, BaseModule] = {}\n    def register(\n        self, name: str, module: BaseModule\n    ):  # Type hint changed to BaseModule instance\n        self._modules[name] = module\n    def get(self, name: str) -> BaseModule | None:  # Added | None for robustness\n        return self._modules.get(name)",
        "detail": "core.app",
        "documentation": {}
    },
    {
        "label": "StudyOS",
        "kind": 6,
        "importPath": "core.app",
        "description": "core.app",
        "peekOfCode": "class StudyOS:\n    def __init__(self, page: ft.Page):\n        self.page = page  # Store page instance\n        self.core = Core(page)\n        self._start_background_services()  # Start background services like UnifiedGuardian\n        self._setup_window_config()\n        self._init_modules_and_registry()\n        self._init_ui()\n        self._load_initial_module_view()\n    def _start_background_services(self):",
        "detail": "core.app",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "core.app",
        "description": "core.app",
        "peekOfCode": "def main(page: ft.Page):\n    StudyOS(page)\nif __name__ == \"__main__\":\n    ft.app(target=main, view=ft.AppView.FLET_APP)",
        "detail": "core.app",
        "documentation": {}
    },
    {
        "label": "UnifiedGuardian",
        "kind": 6,
        "importPath": "core.codebase_guardian",
        "description": "core.codebase_guardian",
        "peekOfCode": "class UnifiedGuardian:\n    def __init__(self):\n        self.observer = Observer()\n        self.change_cache: Dict[Path, float] = {}\n        self.debounce_time = 1.5  # Seconds\n        self.doc = QuantumDocumenter()\n        self.doctor = CodebaseDoctor()\n    async def start(self):\n        event_handler = GuardianHandler(self)\n        self.observer.schedule(event_handler, \".\", recursive=True)",
        "detail": "core.codebase_guardian",
        "documentation": {}
    },
    {
        "label": "GuardianHandler",
        "kind": 6,
        "importPath": "core.codebase_guardian",
        "description": "core.codebase_guardian",
        "peekOfCode": "class GuardianHandler(FileSystemEventHandler):\n    def __init__(self, guardian: UnifiedGuardian):\n        self.guardian = guardian\n    def on_modified(self, event):\n        if not event.is_directory and event.src_path.endswith(\".py\"):\n            path = Path(event.src_path)\n            self.guardian.change_cache[path] = time.time()\nclass QuantumDocumenter:\n    async def generate(self, path: Path):\n        async with aiofiles.open(path) as f:",
        "detail": "core.codebase_guardian",
        "documentation": {}
    },
    {
        "label": "QuantumDocumenter",
        "kind": 6,
        "importPath": "core.codebase_guardian",
        "description": "core.codebase_guardian",
        "peekOfCode": "class QuantumDocumenter:\n    async def generate(self, path: Path):\n        async with aiofiles.open(path) as f:\n            code = await f.read()\n        # Generate documentation logic\n        self.guardian.show_notification(f\"📚 Updated docs for {path.name}\")\nclass CodebaseDoctor:\n    async def heal(self, path: Path) -> bool:\n        try:\n            async with aiofiles.open(path) as f:",
        "detail": "core.codebase_guardian",
        "documentation": {}
    },
    {
        "label": "CodebaseDoctor",
        "kind": 6,
        "importPath": "core.codebase_guardian",
        "description": "core.codebase_guardian",
        "peekOfCode": "class CodebaseDoctor:\n    async def heal(self, path: Path) -> bool:\n        try:\n            async with aiofiles.open(path) as f:\n                code = await f.read()\n            # Phase 1: Fix Syntax Errors\n            fixed_code = self._fix_syntax(code)\n            # Phase 2: Apply AST-Based Safe Fixes\n            safe_fixed = self._safe_ast_fixes(fixed_code)\n            # Phase 3: Format with Black",
        "detail": "core.codebase_guardian",
        "documentation": {}
    },
    {
        "label": "LoggerFixCommand",
        "kind": 6,
        "importPath": "core.codebase_guardian",
        "description": "core.codebase_guardian",
        "peekOfCode": "class LoggerFixCommand(VisitorBasedCodemodCommand):\n    def visit_Call(self, node):\n        if (\n            isinstance(node.func, ast.Attribute)\n            and node.func.attr == \"warn\"\n            and \"logging\" in self.get_metadata(CodeRangeProvider, node).module\n        ):\n            return node._replace(func=node.func._replace(attr=\"warning\"))\nclass SelfAdderCommand(VisitorBasedCodemodCommand):\n    def visit_FunctionDef(self, node):",
        "detail": "core.codebase_guardian",
        "documentation": {}
    },
    {
        "label": "SelfAdderCommand",
        "kind": 6,
        "importPath": "core.codebase_guardian",
        "description": "core.codebase_guardian",
        "peekOfCode": "class SelfAdderCommand(VisitorBasedCodemodCommand):\n    def visit_FunctionDef(self, node):\n        if not node.params or node.params[0].name != \"self\":\n            return node.with_changes(\n                params=node.params.insert(0, ast.Param(name=\"self\"))\n            )",
        "detail": "core.codebase_guardian",
        "documentation": {}
    },
    {
        "label": "NeuroplasticEngine",
        "kind": 6,
        "importPath": "core.cortical_engine",
        "description": "core.cortical_engine",
        "peekOfCode": "class NeuroplasticEngine:\n    def __init__(self):\n        self.tokenizer = AutoTokenizer.from_pretrained(\"gpt2\")\n        self.model = AutoModel.from_pretrained(\"gpt2\")\n        self.knowledge = {}\n    async def analyze_code(self, path):\n        async with aiofiles.open(path) as f:\n            code = await f.read()\n            parsed_code_ast = await self.loop.run_in_executor(\n                None, self._parse_code, code",
        "detail": "core.cortical_engine",
        "documentation": {}
    },
    {
        "label": "ThemeManager",
        "kind": 6,
        "importPath": "core.theme_manager",
        "description": "core.theme_manager",
        "peekOfCode": "class ThemeManager:\n    THEMES = {\n        \"Humanist\": (humanist.THEME, \"light\"),\n        \"Fluent\": (fluent.THEME, \"system\"),  # Fluent can adapt, so 'system' is fine\n        \"Cupertino\": (cupertino.THEME, \"light\"),\n        \"Corporate Blue\": (corporate_blue.THEME, \"light\"),  # Renamed for clarity\n        \"Midnight\": (midnight.THEME, \"dark\"),\n        \"Material\": (material.THEME, \"light\"),\n        \"Google\": (google.THEME, \"light\"),\n        \"Gemini Inspired\": (gemini_inspired.THEME, \"light\"),",
        "detail": "core.theme_manager",
        "documentation": {}
    },
    {
        "label": "CognitiveOptimizer",
        "kind": 6,
        "importPath": "interface.autonomic",
        "description": "interface.autonomic",
        "peekOfCode": "class CognitiveOptimizer:\n    def __init__(self, knowledge_graph: Dict[str, Any]):\n        self.graph = knowledge_graph\n        self.cluster_model = OPTICS(min_samples=2)\n    def optimize_architecture(self):\n        \"\"\"Reorganize code based on semantic similarity\"\"\"\n        embeddings = np.stack([v[\"embedding\"] for v in self.graph[\"concepts\"].values()])\n        self.cluster_model.fit(embeddings)\n        for cluster_id in set(self.cluster_model.labels_):\n            if cluster_id == -1:",
        "detail": "interface.autonomic",
        "documentation": {}
    },
    {
        "label": "MorphicInterface",
        "kind": 6,
        "importPath": "interface.holographic_ui",
        "description": "interface.holographic_ui",
        "peekOfCode": "class MorphicInterface(ft.UserControl):\n    def __init__(self, engine):\n        super().__init__()\n        self.engine = engine\n        self.attention = np.random.rand(768)\n    def build(self):\n        return ft.Stack(\n            [\n                ft.Container(\n                    gradient=ft.LinearGradient(",
        "detail": "interface.holographic_ui",
        "documentation": {}
    },
    {
        "label": "BaseModule",
        "kind": 6,
        "importPath": "modules.base_module",
        "description": "modules.base_module",
        "peekOfCode": "class BaseModule:\n    def __init__(self, core: Core):\n        self.core = core\n        self.view = None\n    async def load_data(self):\n        \"\"\"Override for async data loading\"\"\"\n        pass",
        "detail": "modules.base_module",
        "documentation": {}
    },
    {
        "label": "FlashcardModule",
        "kind": 6,
        "importPath": "modules.flashcards_module",
        "description": "modules.flashcards_module",
        "peekOfCode": "class FlashcardModule(BaseModule):\n    def __init__(self, core: Core):\n        super().__init__(core)\n        # Ensure core.config.paths.flashcards exists or handle appropriately\n        if (\n            hasattr(self.core, \"config\")\n            and hasattr(self.core.config, \"paths\")\n            and hasattr(self.core.config.paths, \"flashcards\")\n        ):\n            self.data_path = self.core.config.paths.flashcards",
        "detail": "modules.flashcards_module",
        "documentation": {}
    },
    {
        "label": "NotesModule",
        "kind": 6,
        "importPath": "modules.notes_module",
        "description": "modules.notes_module",
        "peekOfCode": "class NotesModule(BaseModule):  # Renamed from NoteModule\n    def __init__(self, core: Core):\n        super().__init__(core)\n        self.theme = core.theme_manager\n        if (\n            hasattr(self.core, \"config\")\n            and hasattr(self.core.config, \"paths\")\n            and hasattr(self.core.config.paths, \"notes\")\n        ):\n            self.data_path = self.core.config.paths.notes",
        "detail": "modules.notes_module",
        "documentation": {}
    },
    {
        "label": "ProgressModule",
        "kind": 6,
        "importPath": "modules.progress_module",
        "description": "modules.progress_module",
        "peekOfCode": "class ProgressModule(BaseModule):\n    def __init__(self, core: Core):\n        super().__init__(core)\n        self.data_path = Path(\"data/progress.json\")\n        self.data_path.parent.mkdir(parents=True, exist_ok=True)\n    def build(self):\n        self.chart = ft.LineChart()\n        return ft.Column(\n            [\n                ft.Text(\"Study Progress\", style=\"headlineMedium\"),",
        "detail": "modules.progress_module",
        "documentation": {}
    },
    {
        "label": "SettingsModule",
        "kind": 6,
        "importPath": "modules.settings_module",
        "description": "modules.settings_module",
        "peekOfCode": "class SettingsModule(BaseModule):\n    def __init__(self, core: Core):\n        super().__init__(core)\n        if not hasattr(self.core, \"theme_manager\"):\n            raise AttributeError(\n                \"Core instance must have a 'theme_manager' attribute for SettingsModule.\"\n            )\n        self.theme_manager = self.core.theme_manager\n        self.available_themes = list(ThemeManager.THEMES.keys())\n    def build(self):",
        "detail": "modules.settings_module",
        "documentation": {}
    },
    {
        "label": "StatisticsModule",
        "kind": 6,
        "importPath": "modules.statistics_module",
        "description": "modules.statistics_module",
        "peekOfCode": "class StatisticsModule(BaseModule):  # Changed to inherit from BaseModule\n    def __init__(self, core: Core):  # Changed to accept core\n        super().__init__(core)\n        # self.theme = theme_manager # Redundant if core.theme_manager is used\n        # If you need theme_manager specifically, access via self.core.theme_manager\n    def build(self):\n        return ft.DataTable(\n            columns=[\n                ft.DataColumn(ft.Text(\"Subject\")),\n                ft.DataColumn(ft.Text(\"Time Spent\")),",
        "detail": "modules.statistics_module",
        "documentation": {}
    },
    {
        "label": "TaskModule",
        "kind": 6,
        "importPath": "modules.tasks_module",
        "description": "modules.tasks_module",
        "peekOfCode": "class TaskModule(BaseModule):  # Inherit from BaseModule\n    def __init__(self, core: Core):\n        super().__init__(core)  # Call BaseModule's __init__\n        # Initialize data_path, checking core.config\n        if (\n            hasattr(self.core, \"config\")\n            and hasattr(self.core.config, \"paths\")\n            and hasattr(self.core.config.paths, \"tasks\")\n        ):\n            self.data_path = self.core.config.paths.tasks",
        "detail": "modules.tasks_module",
        "documentation": {}
    },
    {
        "label": "FlashcardBase",
        "kind": 6,
        "importPath": "schemas.flashcard_schema",
        "description": "schemas.flashcard_schema",
        "peekOfCode": "class FlashcardBase(BaseModel):\n    question: str = Field(..., alias=\"q\", min_length=1)\n    answer: str = Field(..., alias=\"a\", min_length=1)\nclass FlashcardCreate(FlashcardBase):\n    pass\nclass Flashcard(FlashcardBase):\n    id: str = Field(default_factory=lambda: str(uuid.uuid4()))\n    # deck_id: Optional[str] = None # Example: if you add decks\n    created_at: datetime = Field(default_factory=datetime.utcnow)\n    last_reviewed_at: Optional[datetime] = None",
        "detail": "schemas.flashcard_schema",
        "documentation": {}
    },
    {
        "label": "FlashcardCreate",
        "kind": 6,
        "importPath": "schemas.flashcard_schema",
        "description": "schemas.flashcard_schema",
        "peekOfCode": "class FlashcardCreate(FlashcardBase):\n    pass\nclass Flashcard(FlashcardBase):\n    id: str = Field(default_factory=lambda: str(uuid.uuid4()))\n    # deck_id: Optional[str] = None # Example: if you add decks\n    created_at: datetime = Field(default_factory=datetime.utcnow)\n    last_reviewed_at: Optional[datetime] = None\n    class Config:\n        orm_mode = True  # or from_attributes = True for Pydantic v2\n        allow_population_by_field_name = True  # To allow 'q' and 'a' as input",
        "detail": "schemas.flashcard_schema",
        "documentation": {}
    },
    {
        "label": "Flashcard",
        "kind": 6,
        "importPath": "schemas.flashcard_schema",
        "description": "schemas.flashcard_schema",
        "peekOfCode": "class Flashcard(FlashcardBase):\n    id: str = Field(default_factory=lambda: str(uuid.uuid4()))\n    # deck_id: Optional[str] = None # Example: if you add decks\n    created_at: datetime = Field(default_factory=datetime.utcnow)\n    last_reviewed_at: Optional[datetime] = None\n    class Config:\n        orm_mode = True  # or from_attributes = True for Pydantic v2\n        allow_population_by_field_name = True  # To allow 'q' and 'a' as input",
        "detail": "schemas.flashcard_schema",
        "documentation": {}
    },
    {
        "label": "NoteBase",
        "kind": 6,
        "importPath": "schemas.note_schema",
        "description": "schemas.note_schema",
        "peekOfCode": "class NoteBase(BaseModel):\n    title: str = Field(..., min_length=1, max_length=255)\n    content: str = \"\"\nclass NoteCreate(NoteBase):\n    pass\nclass Note(NoteBase):\n    id: str = Field(default_factory=lambda: str(uuid.uuid4()))\n    created_at: datetime = Field(default_factory=datetime.utcnow)\n    updated_at: datetime = Field(default_factory=datetime.utcnow)\n    class Config:",
        "detail": "schemas.note_schema",
        "documentation": {}
    },
    {
        "label": "NoteCreate",
        "kind": 6,
        "importPath": "schemas.note_schema",
        "description": "schemas.note_schema",
        "peekOfCode": "class NoteCreate(NoteBase):\n    pass\nclass Note(NoteBase):\n    id: str = Field(default_factory=lambda: str(uuid.uuid4()))\n    created_at: datetime = Field(default_factory=datetime.utcnow)\n    updated_at: datetime = Field(default_factory=datetime.utcnow)\n    class Config:\n        orm_mode = True  # or from_attributes = True for Pydantic v2",
        "detail": "schemas.note_schema",
        "documentation": {}
    },
    {
        "label": "Note",
        "kind": 6,
        "importPath": "schemas.note_schema",
        "description": "schemas.note_schema",
        "peekOfCode": "class Note(NoteBase):\n    id: str = Field(default_factory=lambda: str(uuid.uuid4()))\n    created_at: datetime = Field(default_factory=datetime.utcnow)\n    updated_at: datetime = Field(default_factory=datetime.utcnow)\n    class Config:\n        orm_mode = True  # or from_attributes = True for Pydantic v2",
        "detail": "schemas.note_schema",
        "documentation": {}
    },
    {
        "label": "NoteBase",
        "kind": 6,
        "importPath": "schemas.note_schemas",
        "description": "schemas.note_schemas",
        "peekOfCode": "class NoteBase(BaseModel):\n    title: str = Field(..., min_length=1, max_length=100)\n    content: str = \"\"\nclass NoteCreate(NoteBase):\n    pass\nclass Note(NoteBase):\n    id: str = Field(default_factory=lambda: str(uuid.uuid4()))\n    created_at: datetime = Field(default_factory=datetime.utcnow)\n    updated_at: datetime = Field(default_factory=datetime.utcnow)\n    class Config:",
        "detail": "schemas.note_schemas",
        "documentation": {}
    },
    {
        "label": "NoteCreate",
        "kind": 6,
        "importPath": "schemas.note_schemas",
        "description": "schemas.note_schemas",
        "peekOfCode": "class NoteCreate(NoteBase):\n    pass\nclass Note(NoteBase):\n    id: str = Field(default_factory=lambda: str(uuid.uuid4()))\n    created_at: datetime = Field(default_factory=datetime.utcnow)\n    updated_at: datetime = Field(default_factory=datetime.utcnow)\n    class Config:\n        # For Pydantic V1, use `orm_mode = True` if you were loading from ORM\n        # For Pydantic V2, use `from_attributes = True`\n        from_attributes = True",
        "detail": "schemas.note_schemas",
        "documentation": {}
    },
    {
        "label": "Note",
        "kind": 6,
        "importPath": "schemas.note_schemas",
        "description": "schemas.note_schemas",
        "peekOfCode": "class Note(NoteBase):\n    id: str = Field(default_factory=lambda: str(uuid.uuid4()))\n    created_at: datetime = Field(default_factory=datetime.utcnow)\n    updated_at: datetime = Field(default_factory=datetime.utcnow)\n    class Config:\n        # For Pydantic V1, use `orm_mode = True` if you were loading from ORM\n        # For Pydantic V2, use `from_attributes = True`\n        from_attributes = True",
        "detail": "schemas.note_schemas",
        "documentation": {}
    },
    {
        "label": "ProgressEntry",
        "kind": 6,
        "importPath": "schemas.progress_schema",
        "description": "schemas.progress_schema",
        "peekOfCode": "class ProgressEntry(BaseModel):\n    # Assuming date is stored as string e.g., \"YYYY-MM-DD\" or integer timestamp\n    # For simplicity, let's use date type and convert if needed during load/save\n    day_date: Union[date, str] = Field(..., alias=\"date\")  # 'date' is the key in JSON\n    score: float  # Or int, depending on what score represents\n    @validator(\"day_date\", pre=True)\n    def parse_date_str(cls, v):\n        if isinstance(v, str):\n            try:\n                return date.fromisoformat(v)",
        "detail": "schemas.progress_schema",
        "documentation": {}
    },
    {
        "label": "ProgressData",
        "kind": 6,
        "importPath": "schemas.progress_schema",
        "description": "schemas.progress_schema",
        "peekOfCode": "class ProgressData(BaseModel):\n    history: List[ProgressEntry] = []",
        "detail": "schemas.progress_schema",
        "documentation": {}
    },
    {
        "label": "TaskCreate",
        "kind": 6,
        "importPath": "schemas.task_create",
        "description": "schemas.task_create",
        "peekOfCode": "class TaskCreate(BaseModel):\n    description: str\n    deadline: str  # ISO format\n    @validator(\"deadline\")\n    def valid_future_date(cls, v):\n        parsed = datetime.fromisoformat(v)\n        if parsed < datetime.now():\n            raise ValueError(\"Deadline must be in future\")\n        return v\nclass TaskResponse(TaskCreate):",
        "detail": "schemas.task_create",
        "documentation": {}
    },
    {
        "label": "TaskResponse",
        "kind": 6,
        "importPath": "schemas.task_create",
        "description": "schemas.task_create",
        "peekOfCode": "class TaskResponse(TaskCreate):\n    id: str\n    created: datetime\n    completed: bool = False",
        "detail": "schemas.task_create",
        "documentation": {}
    },
    {
        "label": "CodeExpander",
        "kind": 6,
        "importPath": "scripts.snippet_expander",
        "description": "scripts.snippet_expander",
        "peekOfCode": "class CodeExpander:\n    def __init__(self):\n        self.cache = {}\n    def expand(self, partial_code: str) -> list:\n        \"\"\"Turn #copilot fragments into full solutions\"\"\"\n        # Context-aware completion\n        response = openai.Completion.create(\n            model=\"code-davinci-003\",\n            prompt=f\"Complete this code properly:\\n{partial_code}\",\n            temperature=0.2,",
        "detail": "scripts.snippet_expander",
        "documentation": {}
    },
    {
        "label": "ayu_mirage_bg",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "ayu_mirage_bg = \"#1F2430\"  # Background\nayu_mirage_fg = \"#CBCCC6\"  # Foreground\nayu_mirage_ui = \"#707A8C\"  # UI elements, comments, borders\nayu_mirage_guide = \"#3B404D\"  # Indent guides, subtle lines\nayu_mirage_selection = \"#2D3340\"  # Selection, hover bg\nayu_mirage_red = \"#F07178\"\nayu_mirage_orange = \"#FF8F40\"  # Primary accent\nayu_mirage_yellow = \"#FFB454\"\nayu_mirage_green = \"#C2D94C\"\nayu_mirage_cyan = \"#59C2FF\"  # Secondary accent",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "ayu_mirage_fg",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "ayu_mirage_fg = \"#CBCCC6\"  # Foreground\nayu_mirage_ui = \"#707A8C\"  # UI elements, comments, borders\nayu_mirage_guide = \"#3B404D\"  # Indent guides, subtle lines\nayu_mirage_selection = \"#2D3340\"  # Selection, hover bg\nayu_mirage_red = \"#F07178\"\nayu_mirage_orange = \"#FF8F40\"  # Primary accent\nayu_mirage_yellow = \"#FFB454\"\nayu_mirage_green = \"#C2D94C\"\nayu_mirage_cyan = \"#59C2FF\"  # Secondary accent\nayu_mirage_blue = \"#73D0FF\"",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "ayu_mirage_ui",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "ayu_mirage_ui = \"#707A8C\"  # UI elements, comments, borders\nayu_mirage_guide = \"#3B404D\"  # Indent guides, subtle lines\nayu_mirage_selection = \"#2D3340\"  # Selection, hover bg\nayu_mirage_red = \"#F07178\"\nayu_mirage_orange = \"#FF8F40\"  # Primary accent\nayu_mirage_yellow = \"#FFB454\"\nayu_mirage_green = \"#C2D94C\"\nayu_mirage_cyan = \"#59C2FF\"  # Secondary accent\nayu_mirage_blue = \"#73D0FF\"\nayu_mirage_purple = \"#D2A6FF\"",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "ayu_mirage_guide",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "ayu_mirage_guide = \"#3B404D\"  # Indent guides, subtle lines\nayu_mirage_selection = \"#2D3340\"  # Selection, hover bg\nayu_mirage_red = \"#F07178\"\nayu_mirage_orange = \"#FF8F40\"  # Primary accent\nayu_mirage_yellow = \"#FFB454\"\nayu_mirage_green = \"#C2D94C\"\nayu_mirage_cyan = \"#59C2FF\"  # Secondary accent\nayu_mirage_blue = \"#73D0FF\"\nayu_mirage_purple = \"#D2A6FF\"\n_snack_bar_theme_config = SnackBarTheme(",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "ayu_mirage_selection",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "ayu_mirage_selection = \"#2D3340\"  # Selection, hover bg\nayu_mirage_red = \"#F07178\"\nayu_mirage_orange = \"#FF8F40\"  # Primary accent\nayu_mirage_yellow = \"#FFB454\"\nayu_mirage_green = \"#C2D94C\"\nayu_mirage_cyan = \"#59C2FF\"  # Secondary accent\nayu_mirage_blue = \"#73D0FF\"\nayu_mirage_purple = \"#D2A6FF\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ayu_mirage_selection,  # Consistent with hover/active states",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "ayu_mirage_red",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "ayu_mirage_red = \"#F07178\"\nayu_mirage_orange = \"#FF8F40\"  # Primary accent\nayu_mirage_yellow = \"#FFB454\"\nayu_mirage_green = \"#C2D94C\"\nayu_mirage_cyan = \"#59C2FF\"  # Secondary accent\nayu_mirage_blue = \"#73D0FF\"\nayu_mirage_purple = \"#D2A6FF\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ayu_mirage_selection,  # Consistent with hover/active states\n    content_text_style=TextStyle(",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "ayu_mirage_orange",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "ayu_mirage_orange = \"#FF8F40\"  # Primary accent\nayu_mirage_yellow = \"#FFB454\"\nayu_mirage_green = \"#C2D94C\"\nayu_mirage_cyan = \"#59C2FF\"  # Secondary accent\nayu_mirage_blue = \"#73D0FF\"\nayu_mirage_purple = \"#D2A6FF\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ayu_mirage_selection,  # Consistent with hover/active states\n    content_text_style=TextStyle(\n        color=ayu_mirage_fg, font_family=\"SF Mono, Menlo, Consolas, monospace\", size=14",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "ayu_mirage_yellow",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "ayu_mirage_yellow = \"#FFB454\"\nayu_mirage_green = \"#C2D94C\"\nayu_mirage_cyan = \"#59C2FF\"  # Secondary accent\nayu_mirage_blue = \"#73D0FF\"\nayu_mirage_purple = \"#D2A6FF\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ayu_mirage_selection,  # Consistent with hover/active states\n    content_text_style=TextStyle(\n        color=ayu_mirage_fg, font_family=\"SF Mono, Menlo, Consolas, monospace\", size=14\n    ),",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "ayu_mirage_green",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "ayu_mirage_green = \"#C2D94C\"\nayu_mirage_cyan = \"#59C2FF\"  # Secondary accent\nayu_mirage_blue = \"#73D0FF\"\nayu_mirage_purple = \"#D2A6FF\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ayu_mirage_selection,  # Consistent with hover/active states\n    content_text_style=TextStyle(\n        color=ayu_mirage_fg, font_family=\"SF Mono, Menlo, Consolas, monospace\", size=14\n    ),\n    action_text_color=ayu_mirage_orange,  # Primary accent for actions",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "ayu_mirage_cyan",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "ayu_mirage_cyan = \"#59C2FF\"  # Secondary accent\nayu_mirage_blue = \"#73D0FF\"\nayu_mirage_purple = \"#D2A6FF\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ayu_mirage_selection,  # Consistent with hover/active states\n    content_text_style=TextStyle(\n        color=ayu_mirage_fg, font_family=\"SF Mono, Menlo, Consolas, monospace\", size=14\n    ),\n    action_text_color=ayu_mirage_orange,  # Primary accent for actions\n    elevation=1,",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "ayu_mirage_blue",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "ayu_mirage_blue = \"#73D0FF\"\nayu_mirage_purple = \"#D2A6FF\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ayu_mirage_selection,  # Consistent with hover/active states\n    content_text_style=TextStyle(\n        color=ayu_mirage_fg, font_family=\"SF Mono, Menlo, Consolas, monospace\", size=14\n    ),\n    action_text_color=ayu_mirage_orange,  # Primary accent for actions\n    elevation=1,\n)",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "ayu_mirage_purple",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "ayu_mirage_purple = \"#D2A6FF\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ayu_mirage_selection,  # Consistent with hover/active states\n    content_text_style=TextStyle(\n        color=ayu_mirage_fg, font_family=\"SF Mono, Menlo, Consolas, monospace\", size=14\n    ),\n    action_text_color=ayu_mirage_orange,  # Primary accent for actions\n    elevation=1,\n)\n_app_bar_theme_config = AppBarTheme(  # Added",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ayu_mirage_selection,  # Consistent with hover/active states\n    content_text_style=TextStyle(\n        color=ayu_mirage_fg, font_family=\"SF Mono, Menlo, Consolas, monospace\", size=14\n    ),\n    action_text_color=ayu_mirage_orange,  # Primary accent for actions\n    elevation=1,\n)\n_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#1A1E28\",  # Darker than main background",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#1A1E28\",  # Darker than main background\n    color=ayu_mirage_fg,\n    elevation=0,\n)\nAYU_MIRAGE_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=ayu_mirage_orange,\n        primary_container=ayu_mirage_selection,\n        secondary=ayu_mirage_cyan,",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "AYU_MIRAGE_THEME",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "AYU_MIRAGE_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=ayu_mirage_orange,\n        primary_container=ayu_mirage_selection,\n        secondary=ayu_mirage_cyan,\n        secondary_container=ayu_mirage_selection,\n        surface=ayu_mirage_bg,\n        surface_variant=\"#252A37\",  # Slightly lighter for cards\n        on_surface=ayu_mirage_fg,\n        outline=ayu_mirage_ui,",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.ayu_mirage",
        "description": "themes.ayu_mirage",
        "peekOfCode": "THEME = AYU_MIRAGE_THEME",
        "detail": "themes.ayu_mirage",
        "documentation": {}
    },
    {
        "label": "cat_rosewater",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_rosewater = \"#F5E0DC\"\ncat_flamingo = \"#F2CDCD\"\ncat_pink = \"#F5C2E7\"\ncat_mauve = \"#CBA6F7\"  # Primary accent\ncat_red = \"#F38BA8\"\ncat_maroon = \"#EBA0AC\"\ncat_peach = \"#FAB387\"\ncat_yellow = \"#F9E2AF\"\ncat_green = \"#A6E3A1\"  # Secondary accent\ncat_teal = \"#94E2D5\"",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_flamingo",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_flamingo = \"#F2CDCD\"\ncat_pink = \"#F5C2E7\"\ncat_mauve = \"#CBA6F7\"  # Primary accent\ncat_red = \"#F38BA8\"\ncat_maroon = \"#EBA0AC\"\ncat_peach = \"#FAB387\"\ncat_yellow = \"#F9E2AF\"\ncat_green = \"#A6E3A1\"  # Secondary accent\ncat_teal = \"#94E2D5\"\ncat_sky = \"#89DCEB\"",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_pink",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_pink = \"#F5C2E7\"\ncat_mauve = \"#CBA6F7\"  # Primary accent\ncat_red = \"#F38BA8\"\ncat_maroon = \"#EBA0AC\"\ncat_peach = \"#FAB387\"\ncat_yellow = \"#F9E2AF\"\ncat_green = \"#A6E3A1\"  # Secondary accent\ncat_teal = \"#94E2D5\"\ncat_sky = \"#89DCEB\"\ncat_sapphire = \"#74C7EC\"",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_mauve",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_mauve = \"#CBA6F7\"  # Primary accent\ncat_red = \"#F38BA8\"\ncat_maroon = \"#EBA0AC\"\ncat_peach = \"#FAB387\"\ncat_yellow = \"#F9E2AF\"\ncat_green = \"#A6E3A1\"  # Secondary accent\ncat_teal = \"#94E2D5\"\ncat_sky = \"#89DCEB\"\ncat_sapphire = \"#74C7EC\"\ncat_blue = \"#89B4FA\"",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_red",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_red = \"#F38BA8\"\ncat_maroon = \"#EBA0AC\"\ncat_peach = \"#FAB387\"\ncat_yellow = \"#F9E2AF\"\ncat_green = \"#A6E3A1\"  # Secondary accent\ncat_teal = \"#94E2D5\"\ncat_sky = \"#89DCEB\"\ncat_sapphire = \"#74C7EC\"\ncat_blue = \"#89B4FA\"\ncat_lavender = \"#B4BEFE\"",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_maroon",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_maroon = \"#EBA0AC\"\ncat_peach = \"#FAB387\"\ncat_yellow = \"#F9E2AF\"\ncat_green = \"#A6E3A1\"  # Secondary accent\ncat_teal = \"#94E2D5\"\ncat_sky = \"#89DCEB\"\ncat_sapphire = \"#74C7EC\"\ncat_blue = \"#89B4FA\"\ncat_lavender = \"#B4BEFE\"\ncat_text = \"#CDD6F4\"  # Main text",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_peach",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_peach = \"#FAB387\"\ncat_yellow = \"#F9E2AF\"\ncat_green = \"#A6E3A1\"  # Secondary accent\ncat_teal = \"#94E2D5\"\ncat_sky = \"#89DCEB\"\ncat_sapphire = \"#74C7EC\"\ncat_blue = \"#89B4FA\"\ncat_lavender = \"#B4BEFE\"\ncat_text = \"#CDD6F4\"  # Main text\ncat_subtext1 = \"#BAC2DE\"",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_yellow",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_yellow = \"#F9E2AF\"\ncat_green = \"#A6E3A1\"  # Secondary accent\ncat_teal = \"#94E2D5\"\ncat_sky = \"#89DCEB\"\ncat_sapphire = \"#74C7EC\"\ncat_blue = \"#89B4FA\"\ncat_lavender = \"#B4BEFE\"\ncat_text = \"#CDD6F4\"  # Main text\ncat_subtext1 = \"#BAC2DE\"\ncat_subtext0 = \"#A6ADC8\"",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_green",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_green = \"#A6E3A1\"  # Secondary accent\ncat_teal = \"#94E2D5\"\ncat_sky = \"#89DCEB\"\ncat_sapphire = \"#74C7EC\"\ncat_blue = \"#89B4FA\"\ncat_lavender = \"#B4BEFE\"\ncat_text = \"#CDD6F4\"  # Main text\ncat_subtext1 = \"#BAC2DE\"\ncat_subtext0 = \"#A6ADC8\"\ncat_overlay2 = \"#9399B2\"",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_teal",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_teal = \"#94E2D5\"\ncat_sky = \"#89DCEB\"\ncat_sapphire = \"#74C7EC\"\ncat_blue = \"#89B4FA\"\ncat_lavender = \"#B4BEFE\"\ncat_text = \"#CDD6F4\"  # Main text\ncat_subtext1 = \"#BAC2DE\"\ncat_subtext0 = \"#A6ADC8\"\ncat_overlay2 = \"#9399B2\"\ncat_overlay1 = \"#7F849C\"",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_sky",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_sky = \"#89DCEB\"\ncat_sapphire = \"#74C7EC\"\ncat_blue = \"#89B4FA\"\ncat_lavender = \"#B4BEFE\"\ncat_text = \"#CDD6F4\"  # Main text\ncat_subtext1 = \"#BAC2DE\"\ncat_subtext0 = \"#A6ADC8\"\ncat_overlay2 = \"#9399B2\"\ncat_overlay1 = \"#7F849C\"\ncat_overlay0 = \"#6C7086\"  # Comments, borders",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_sapphire",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_sapphire = \"#74C7EC\"\ncat_blue = \"#89B4FA\"\ncat_lavender = \"#B4BEFE\"\ncat_text = \"#CDD6F4\"  # Main text\ncat_subtext1 = \"#BAC2DE\"\ncat_subtext0 = \"#A6ADC8\"\ncat_overlay2 = \"#9399B2\"\ncat_overlay1 = \"#7F849C\"\ncat_overlay0 = \"#6C7086\"  # Comments, borders\ncat_surface2 = \"#585B70\"",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_blue",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_blue = \"#89B4FA\"\ncat_lavender = \"#B4BEFE\"\ncat_text = \"#CDD6F4\"  # Main text\ncat_subtext1 = \"#BAC2DE\"\ncat_subtext0 = \"#A6ADC8\"\ncat_overlay2 = \"#9399B2\"\ncat_overlay1 = \"#7F849C\"\ncat_overlay0 = \"#6C7086\"  # Comments, borders\ncat_surface2 = \"#585B70\"\ncat_surface1 = \"#45475A\"  # Cards, hover",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_lavender",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_lavender = \"#B4BEFE\"\ncat_text = \"#CDD6F4\"  # Main text\ncat_subtext1 = \"#BAC2DE\"\ncat_subtext0 = \"#A6ADC8\"\ncat_overlay2 = \"#9399B2\"\ncat_overlay1 = \"#7F849C\"\ncat_overlay0 = \"#6C7086\"  # Comments, borders\ncat_surface2 = \"#585B70\"\ncat_surface1 = \"#45475A\"  # Cards, hover\ncat_surface0 = \"#313244\"  # Slightly lighter than base",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_text",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_text = \"#CDD6F4\"  # Main text\ncat_subtext1 = \"#BAC2DE\"\ncat_subtext0 = \"#A6ADC8\"\ncat_overlay2 = \"#9399B2\"\ncat_overlay1 = \"#7F849C\"\ncat_overlay0 = \"#6C7086\"  # Comments, borders\ncat_surface2 = \"#585B70\"\ncat_surface1 = \"#45475A\"  # Cards, hover\ncat_surface0 = \"#313244\"  # Slightly lighter than base\ncat_base = \"#1E1E2E\"  # Background",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_subtext1",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_subtext1 = \"#BAC2DE\"\ncat_subtext0 = \"#A6ADC8\"\ncat_overlay2 = \"#9399B2\"\ncat_overlay1 = \"#7F849C\"\ncat_overlay0 = \"#6C7086\"  # Comments, borders\ncat_surface2 = \"#585B70\"\ncat_surface1 = \"#45475A\"  # Cards, hover\ncat_surface0 = \"#313244\"  # Slightly lighter than base\ncat_base = \"#1E1E2E\"  # Background\ncat_mantle = \"#181825\"  # Darker background (e.g. app bar)",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_subtext0",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_subtext0 = \"#A6ADC8\"\ncat_overlay2 = \"#9399B2\"\ncat_overlay1 = \"#7F849C\"\ncat_overlay0 = \"#6C7086\"  # Comments, borders\ncat_surface2 = \"#585B70\"\ncat_surface1 = \"#45475A\"  # Cards, hover\ncat_surface0 = \"#313244\"  # Slightly lighter than base\ncat_base = \"#1E1E2E\"  # Background\ncat_mantle = \"#181825\"  # Darker background (e.g. app bar)\ncat_crust = \"#11111B\"  # Darkest",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_overlay2",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_overlay2 = \"#9399B2\"\ncat_overlay1 = \"#7F849C\"\ncat_overlay0 = \"#6C7086\"  # Comments, borders\ncat_surface2 = \"#585B70\"\ncat_surface1 = \"#45475A\"  # Cards, hover\ncat_surface0 = \"#313244\"  # Slightly lighter than base\ncat_base = \"#1E1E2E\"  # Background\ncat_mantle = \"#181825\"  # Darker background (e.g. app bar)\ncat_crust = \"#11111B\"  # Darkest\n_snack_bar_theme_config = SnackBarTheme(",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_overlay1",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_overlay1 = \"#7F849C\"\ncat_overlay0 = \"#6C7086\"  # Comments, borders\ncat_surface2 = \"#585B70\"\ncat_surface1 = \"#45475A\"  # Cards, hover\ncat_surface0 = \"#313244\"  # Slightly lighter than base\ncat_base = \"#1E1E2E\"  # Background\ncat_mantle = \"#181825\"  # Darker background (e.g. app bar)\ncat_crust = \"#11111B\"  # Darkest\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=cat_surface1,  # Consistent with card/hover backgrounds",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_overlay0",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_overlay0 = \"#6C7086\"  # Comments, borders\ncat_surface2 = \"#585B70\"\ncat_surface1 = \"#45475A\"  # Cards, hover\ncat_surface0 = \"#313244\"  # Slightly lighter than base\ncat_base = \"#1E1E2E\"  # Background\ncat_mantle = \"#181825\"  # Darker background (e.g. app bar)\ncat_crust = \"#11111B\"  # Darkest\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=cat_surface1,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_surface2",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_surface2 = \"#585B70\"\ncat_surface1 = \"#45475A\"  # Cards, hover\ncat_surface0 = \"#313244\"  # Slightly lighter than base\ncat_base = \"#1E1E2E\"  # Background\ncat_mantle = \"#181825\"  # Darker background (e.g. app bar)\ncat_crust = \"#11111B\"  # Darkest\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=cat_surface1,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=cat_text, font_family=\"JetBrains Mono, Fira Code, monospace\", size=14",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_surface1",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_surface1 = \"#45475A\"  # Cards, hover\ncat_surface0 = \"#313244\"  # Slightly lighter than base\ncat_base = \"#1E1E2E\"  # Background\ncat_mantle = \"#181825\"  # Darker background (e.g. app bar)\ncat_crust = \"#11111B\"  # Darkest\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=cat_surface1,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=cat_text, font_family=\"JetBrains Mono, Fira Code, monospace\", size=14\n    ),",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_surface0",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_surface0 = \"#313244\"  # Slightly lighter than base\ncat_base = \"#1E1E2E\"  # Background\ncat_mantle = \"#181825\"  # Darker background (e.g. app bar)\ncat_crust = \"#11111B\"  # Darkest\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=cat_surface1,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=cat_text, font_family=\"JetBrains Mono, Fira Code, monospace\", size=14\n    ),\n    action_text_color=cat_mauve,  # Primary accent for actions",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_base",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_base = \"#1E1E2E\"  # Background\ncat_mantle = \"#181825\"  # Darker background (e.g. app bar)\ncat_crust = \"#11111B\"  # Darkest\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=cat_surface1,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=cat_text, font_family=\"JetBrains Mono, Fira Code, monospace\", size=14\n    ),\n    action_text_color=cat_mauve,  # Primary accent for actions\n    elevation=1,",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_mantle",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_mantle = \"#181825\"  # Darker background (e.g. app bar)\ncat_crust = \"#11111B\"  # Darkest\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=cat_surface1,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=cat_text, font_family=\"JetBrains Mono, Fira Code, monospace\", size=14\n    ),\n    action_text_color=cat_mauve,  # Primary accent for actions\n    elevation=1,\n)",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "cat_crust",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "cat_crust = \"#11111B\"  # Darkest\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=cat_surface1,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=cat_text, font_family=\"JetBrains Mono, Fira Code, monospace\", size=14\n    ),\n    action_text_color=cat_mauve,  # Primary accent for actions\n    elevation=1,\n)\n_app_bar_theme_config = AppBarTheme(",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=cat_surface1,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=cat_text, font_family=\"JetBrains Mono, Fira Code, monospace\", size=14\n    ),\n    action_text_color=cat_mauve,  # Primary accent for actions\n    elevation=1,\n)\n_app_bar_theme_config = AppBarTheme(\n    bgcolor=cat_mantle,  # Darkest bg for app bar",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(\n    bgcolor=cat_mantle,  # Darkest bg for app bar\n    color=cat_text,\n    elevation=0,\n)\nCATPPUCCIN_MOCHA_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=cat_mauve,\n        primary_container=cat_surface1,\n        secondary=cat_green,",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "CATPPUCCIN_MOCHA_THEME",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "CATPPUCCIN_MOCHA_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=cat_mauve,\n        primary_container=cat_surface1,\n        secondary=cat_green,\n        secondary_container=cat_surface0,\n        surface=cat_base,\n        surface_variant=cat_surface0,  # For cards or distinct sections\n        on_surface=cat_text,\n        outline=cat_overlay0,",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.catppuccin_mocha",
        "description": "themes.catppuccin_mocha",
        "peekOfCode": "THEME = CATPPUCCIN_MOCHA_THEME",
        "detail": "themes.catppuccin_mocha",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.corporate_blue",
        "description": "themes.corporate_blue",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(  # Added SnackBarTheme\n    bgcolor=\"#34495E\",  # primary_container or a dark, neutral color\n    content_text_style=TextStyle(color=Colors.WHITE, font_family=\"Roboto\", size=14),\n    action_text_color=\"#3498DB\",  # secondary color for actions\n    elevation=2,\n)\n_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#2C3E50\",  # primary color\n    color=Colors.WHITE,  # on_primary\n    elevation=1,  # Subtle elevation for a corporate look",
        "detail": "themes.corporate_blue",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.corporate_blue",
        "description": "themes.corporate_blue",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#2C3E50\",  # primary color\n    color=Colors.WHITE,  # on_primary\n    elevation=1,  # Subtle elevation for a corporate look\n)\nTHEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#2C3E50\",  # Dark Blue-Gray (like a corporate blue)\n        primary_container=\"#34495E\",  # Slightly Lighter Blue-Gray\n        secondary=\"#3498DB\",  # Bright Blue (accent)",
        "detail": "themes.corporate_blue",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.corporate_blue",
        "description": "themes.corporate_blue",
        "peekOfCode": "THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#2C3E50\",  # Dark Blue-Gray (like a corporate blue)\n        primary_container=\"#34495E\",  # Slightly Lighter Blue-Gray\n        secondary=\"#3498DB\",  # Bright Blue (accent)\n        secondary_container=\"#2980B9\",  # Darker Bright Blue\n        surface=\"#FFFFFF\",  # Clean White surface\n        surface_variant=\"#ECF0F1\",  # Very Light Gray (for subtle variations)\n        on_surface=\"#2C3E50\",  # Dark text for light surface\n        outline=\"#BDC3C7\",  # Light Gray for borders",
        "detail": "themes.corporate_blue",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.cupertino",
        "description": "themes.cupertino",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=Colors.with_opacity(0.9, Colors.BLACK87),  # Translucent dark\n    content_text_style=TextStyle(\n        color=Colors.WHITE,\n        font_family=\"SF Pro Text, San Francisco, Helvetica Neue, Arial, sans-serif\",  # iOS system font stack\n        size=14,\n        weight=\"normal\",  # Cupertino usually uses regular weight for snackbar/toast text\n    ),\n    action_text_color=\"#007AFF\",  # System Blue for actions\n    elevation=0,  # iOS toasts/snackbars are typically flat",
        "detail": "themes.cupertino",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.cupertino",
        "description": "themes.cupertino",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(\n    bgcolor=Colors.with_opacity(\n        0.85, \"#F7F7F7\"\n    ),  # Translucent light gray (common iOS pattern)\n    color=Colors.BLACK,  # Standard black text for light mode\n    elevation=0,  # iOS nav bars often have a subtle border or no shadow initially\n    # scrolled_under_elevation=0.5, # A very subtle shadow or line can appear on scroll\n)\nCUPERTINO_THEME = Theme(\n    color_scheme=ColorScheme(",
        "detail": "themes.cupertino",
        "documentation": {}
    },
    {
        "label": "CUPERTINO_THEME",
        "kind": 5,
        "importPath": "themes.cupertino",
        "description": "themes.cupertino",
        "peekOfCode": "CUPERTINO_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#007AFF\",  # System Blue\n        primary_container=\"#EBF5FF\",  # Lighter blue for backgrounds/highlights\n        secondary=\"#34C759\",  # System Green (for secondary actions or positive feedback)\n        secondary_container=\"#E5F8E9\",  # Lighter green\n        surface=\"#FFFFFF\",  # Standard white surface for cards, backgrounds\n        on_surface=\"#000000\",  # Black text on white surfaces\n        background=\"#F2F2F7\",  # System Gray (Light) for overall page background\n        on_background=\"#000000\",  # Black text on page background",
        "detail": "themes.cupertino",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.cupertino",
        "description": "themes.cupertino",
        "peekOfCode": "THEME = CUPERTINO_THEME",
        "detail": "themes.cupertino",
        "documentation": {}
    },
    {
        "label": "drac_background",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "drac_background = \"#282A36\"\ndrac_current_line = (\n    \"#44475A\"  # Often used for active/hover states or subtle backgrounds\n)\ndrac_foreground = \"#F8F8F2\"  # Main text color\ndrac_comment = \"#6272A4\"\ndrac_cyan = \"#8BE9FD\"\ndrac_green = \"#50FA7B\"\ndrac_orange = \"#FFB86C\"\ndrac_pink = \"#FF79C6\"",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "drac_current_line",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "drac_current_line = (\n    \"#44475A\"  # Often used for active/hover states or subtle backgrounds\n)\ndrac_foreground = \"#F8F8F2\"  # Main text color\ndrac_comment = \"#6272A4\"\ndrac_cyan = \"#8BE9FD\"\ndrac_green = \"#50FA7B\"\ndrac_orange = \"#FFB86C\"\ndrac_pink = \"#FF79C6\"\ndrac_purple = \"#BD93F9\"",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "drac_foreground",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "drac_foreground = \"#F8F8F2\"  # Main text color\ndrac_comment = \"#6272A4\"\ndrac_cyan = \"#8BE9FD\"\ndrac_green = \"#50FA7B\"\ndrac_orange = \"#FFB86C\"\ndrac_pink = \"#FF79C6\"\ndrac_purple = \"#BD93F9\"\ndrac_red = \"#FF5555\"\ndrac_yellow = \"#F1FA8C\"\n_snack_bar_theme_config = SnackBarTheme(",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "drac_comment",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "drac_comment = \"#6272A4\"\ndrac_cyan = \"#8BE9FD\"\ndrac_green = \"#50FA7B\"\ndrac_orange = \"#FFB86C\"\ndrac_pink = \"#FF79C6\"\ndrac_purple = \"#BD93F9\"\ndrac_red = \"#FF5555\"\ndrac_yellow = \"#F1FA8C\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=drac_current_line,  # Consistent with card/hover backgrounds",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "drac_cyan",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "drac_cyan = \"#8BE9FD\"\ndrac_green = \"#50FA7B\"\ndrac_orange = \"#FFB86C\"\ndrac_pink = \"#FF79C6\"\ndrac_purple = \"#BD93F9\"\ndrac_red = \"#FF5555\"\ndrac_yellow = \"#F1FA8C\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=drac_current_line,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "drac_green",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "drac_green = \"#50FA7B\"\ndrac_orange = \"#FFB86C\"\ndrac_pink = \"#FF79C6\"\ndrac_purple = \"#BD93F9\"\ndrac_red = \"#FF5555\"\ndrac_yellow = \"#F1FA8C\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=drac_current_line,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=drac_foreground,",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "drac_orange",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "drac_orange = \"#FFB86C\"\ndrac_pink = \"#FF79C6\"\ndrac_purple = \"#BD93F9\"\ndrac_red = \"#FF5555\"\ndrac_yellow = \"#F1FA8C\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=drac_current_line,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=drac_foreground,\n        font_family=\"Fira Code, Consolas, Monaco, monospace\",",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "drac_pink",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "drac_pink = \"#FF79C6\"\ndrac_purple = \"#BD93F9\"\ndrac_red = \"#FF5555\"\ndrac_yellow = \"#F1FA8C\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=drac_current_line,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=drac_foreground,\n        font_family=\"Fira Code, Consolas, Monaco, monospace\",\n        size=14,",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "drac_purple",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "drac_purple = \"#BD93F9\"\ndrac_red = \"#FF5555\"\ndrac_yellow = \"#F1FA8C\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=drac_current_line,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=drac_foreground,\n        font_family=\"Fira Code, Consolas, Monaco, monospace\",\n        size=14,\n    ),",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "drac_red",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "drac_red = \"#FF5555\"\ndrac_yellow = \"#F1FA8C\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=drac_current_line,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=drac_foreground,\n        font_family=\"Fira Code, Consolas, Monaco, monospace\",\n        size=14,\n    ),\n    action_text_color=drac_pink,  # Primary button color for actions",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "drac_yellow",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "drac_yellow = \"#F1FA8C\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=drac_current_line,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=drac_foreground,\n        font_family=\"Fira Code, Consolas, Monaco, monospace\",\n        size=14,\n    ),\n    action_text_color=drac_pink,  # Primary button color for actions\n    elevation=2,",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=drac_current_line,  # Consistent with card/hover backgrounds\n    content_text_style=TextStyle(\n        color=drac_foreground,\n        font_family=\"Fira Code, Consolas, Monaco, monospace\",\n        size=14,\n    ),\n    action_text_color=drac_pink,  # Primary button color for actions\n    elevation=2,\n)",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#1F202A\",  # Even darker for app bar\n    color=drac_foreground,\n    elevation=0,\n)\nDRACULA_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=drac_purple,  # Dracula Purple\n        primary_container=drac_current_line,  # Subtle dark container\n        secondary=drac_pink,  # Dracula Pink",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "DRACULA_THEME",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "DRACULA_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=drac_purple,  # Dracula Purple\n        primary_container=drac_current_line,  # Subtle dark container\n        secondary=drac_pink,  # Dracula Pink\n        secondary_container=drac_current_line,\n        surface=drac_background,  # Main dark background\n        surface_variant=\"#21222C\",  # Slightly darker variant for cards/sections\n        on_surface=drac_foreground,  # Light text on dark surface\n        outline=drac_comment,  # Muted comment color for borders",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.dracula",
        "description": "themes.dracula",
        "peekOfCode": "THEME = DRACULA_THEME",
        "detail": "themes.dracula",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.emerald_light_oak",
        "description": "themes.emerald_light_oak",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#4A3B31\",  # Consistent with AppBar\n    content_text_style=TextStyle(\n        color=Colors.WHITE, font_family=\"Verdana, Geneva, sans-serif\", size=14\n    ),\n    action_text_color=\"#A2D4C8\",  # Lighter emerald for actions\n    elevation=2,\n)\n_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#4A3B31\",  # Dark Brown, like a darker wood accent",
        "detail": "themes.emerald_light_oak",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.emerald_light_oak",
        "description": "themes.emerald_light_oak",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#4A3B31\",  # Dark Brown, like a darker wood accent\n    color=Colors.WHITE,\n    elevation=2,\n)\nEMERALD_LIGHT_OAK_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#0D9276\",  # Rich Emerald Green\n        primary_container=\"#A2D4C8\",  # Lighter, muted emerald for containers\n        secondary=\"#B8860B\",  # Dark Goldenrod (as a warm accent, can be adjusted)",
        "detail": "themes.emerald_light_oak",
        "documentation": {}
    },
    {
        "label": "EMERALD_LIGHT_OAK_THEME",
        "kind": 5,
        "importPath": "themes.emerald_light_oak",
        "description": "themes.emerald_light_oak",
        "peekOfCode": "EMERALD_LIGHT_OAK_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#0D9276\",  # Rich Emerald Green\n        primary_container=\"#A2D4C8\",  # Lighter, muted emerald for containers\n        secondary=\"#B8860B\",  # Dark Goldenrod (as a warm accent, can be adjusted)\n        secondary_container=\"#F0E68C\",  # Khaki / Pale Gold\n        surface=\"#F5EFE1\",  # Light Oak / Warm Beige (main surface)\n        surface_variant=\"#EAE0D1\",  # Slightly darker/textured Light Oak\n        on_surface=\"#4A3B31\",  # Dark Brown (for text on oak)\n        outline=\"#A08C7D\",  # Muted Brown/Taupe for borders",
        "detail": "themes.emerald_light_oak",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.emerald_light_oak",
        "description": "themes.emerald_light_oak",
        "peekOfCode": "THEME = EMERALD_LIGHT_OAK_THEME",
        "detail": "themes.emerald_light_oak",
        "documentation": {}
    },
    {
        "label": "ef_bg0",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_bg0 = \"#272E33\"  # Background\nef_bg1 = \"#2E383C\"  # Lighter bg / Surface\nef_bg2 = \"#3A454A\"  # Cards, UI elements\nef_bg_visual = \"#4B565C\"  # Visual selections, muted borders\nef_fg = \"#D3C6AA\"  # Foreground text\nef_red = \"#E67E80\"\nef_orange = \"#E69875\"\nef_yellow = \"#DBBC7F\"\nef_green = \"#A7C080\"  # Primary accent\nef_aqua = \"#83C092\"",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_bg1",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_bg1 = \"#2E383C\"  # Lighter bg / Surface\nef_bg2 = \"#3A454A\"  # Cards, UI elements\nef_bg_visual = \"#4B565C\"  # Visual selections, muted borders\nef_fg = \"#D3C6AA\"  # Foreground text\nef_red = \"#E67E80\"\nef_orange = \"#E69875\"\nef_yellow = \"#DBBC7F\"\nef_green = \"#A7C080\"  # Primary accent\nef_aqua = \"#83C092\"\nef_blue = \"#7FBBB3\"  # Secondary accent",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_bg2",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_bg2 = \"#3A454A\"  # Cards, UI elements\nef_bg_visual = \"#4B565C\"  # Visual selections, muted borders\nef_fg = \"#D3C6AA\"  # Foreground text\nef_red = \"#E67E80\"\nef_orange = \"#E69875\"\nef_yellow = \"#DBBC7F\"\nef_green = \"#A7C080\"  # Primary accent\nef_aqua = \"#83C092\"\nef_blue = \"#7FBBB3\"  # Secondary accent\nef_purple = \"#D699B6\"",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_bg_visual",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_bg_visual = \"#4B565C\"  # Visual selections, muted borders\nef_fg = \"#D3C6AA\"  # Foreground text\nef_red = \"#E67E80\"\nef_orange = \"#E69875\"\nef_yellow = \"#DBBC7F\"\nef_green = \"#A7C080\"  # Primary accent\nef_aqua = \"#83C092\"\nef_blue = \"#7FBBB3\"  # Secondary accent\nef_purple = \"#D699B6\"\nef_grey0 = \"#7A8478\"",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_fg",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_fg = \"#D3C6AA\"  # Foreground text\nef_red = \"#E67E80\"\nef_orange = \"#E69875\"\nef_yellow = \"#DBBC7F\"\nef_green = \"#A7C080\"  # Primary accent\nef_aqua = \"#83C092\"\nef_blue = \"#7FBBB3\"  # Secondary accent\nef_purple = \"#D699B6\"\nef_grey0 = \"#7A8478\"\nef_grey1 = \"#859289\"",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_red",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_red = \"#E67E80\"\nef_orange = \"#E69875\"\nef_yellow = \"#DBBC7F\"\nef_green = \"#A7C080\"  # Primary accent\nef_aqua = \"#83C092\"\nef_blue = \"#7FBBB3\"  # Secondary accent\nef_purple = \"#D699B6\"\nef_grey0 = \"#7A8478\"\nef_grey1 = \"#859289\"\nef_grey2 = \"#9DA9A0\"",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_orange",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_orange = \"#E69875\"\nef_yellow = \"#DBBC7F\"\nef_green = \"#A7C080\"  # Primary accent\nef_aqua = \"#83C092\"\nef_blue = \"#7FBBB3\"  # Secondary accent\nef_purple = \"#D699B6\"\nef_grey0 = \"#7A8478\"\nef_grey1 = \"#859289\"\nef_grey2 = \"#9DA9A0\"\n_snack_bar_theme_config = SnackBarTheme(",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_yellow",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_yellow = \"#DBBC7F\"\nef_green = \"#A7C080\"  # Primary accent\nef_aqua = \"#83C092\"\nef_blue = \"#7FBBB3\"  # Secondary accent\nef_purple = \"#D699B6\"\nef_grey0 = \"#7A8478\"\nef_grey1 = \"#859289\"\nef_grey2 = \"#9DA9A0\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ef_bg2,  # Consistent with button disabled/container color",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_green",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_green = \"#A7C080\"  # Primary accent\nef_aqua = \"#83C092\"\nef_blue = \"#7FBBB3\"  # Secondary accent\nef_purple = \"#D699B6\"\nef_grey0 = \"#7A8478\"\nef_grey1 = \"#859289\"\nef_grey2 = \"#9DA9A0\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ef_bg2,  # Consistent with button disabled/container color\n    content_text_style=TextStyle(",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_aqua",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_aqua = \"#83C092\"\nef_blue = \"#7FBBB3\"  # Secondary accent\nef_purple = \"#D699B6\"\nef_grey0 = \"#7A8478\"\nef_grey1 = \"#859289\"\nef_grey2 = \"#9DA9A0\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ef_bg2,  # Consistent with button disabled/container color\n    content_text_style=TextStyle(\n        color=ef_fg, font_family=\"Iosevka, Fira Code, monospace\", size=14",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_blue",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_blue = \"#7FBBB3\"  # Secondary accent\nef_purple = \"#D699B6\"\nef_grey0 = \"#7A8478\"\nef_grey1 = \"#859289\"\nef_grey2 = \"#9DA9A0\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ef_bg2,  # Consistent with button disabled/container color\n    content_text_style=TextStyle(\n        color=ef_fg, font_family=\"Iosevka, Fira Code, monospace\", size=14\n    ),",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_purple",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_purple = \"#D699B6\"\nef_grey0 = \"#7A8478\"\nef_grey1 = \"#859289\"\nef_grey2 = \"#9DA9A0\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ef_bg2,  # Consistent with button disabled/container color\n    content_text_style=TextStyle(\n        color=ef_fg, font_family=\"Iosevka, Fira Code, monospace\", size=14\n    ),\n    action_text_color=ef_green,  # Primary accent for actions",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_grey0",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_grey0 = \"#7A8478\"\nef_grey1 = \"#859289\"\nef_grey2 = \"#9DA9A0\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ef_bg2,  # Consistent with button disabled/container color\n    content_text_style=TextStyle(\n        color=ef_fg, font_family=\"Iosevka, Fira Code, monospace\", size=14\n    ),\n    action_text_color=ef_green,  # Primary accent for actions\n    elevation=1,",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_grey1",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_grey1 = \"#859289\"\nef_grey2 = \"#9DA9A0\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ef_bg2,  # Consistent with button disabled/container color\n    content_text_style=TextStyle(\n        color=ef_fg, font_family=\"Iosevka, Fira Code, monospace\", size=14\n    ),\n    action_text_color=ef_green,  # Primary accent for actions\n    elevation=1,\n)",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "ef_grey2",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "ef_grey2 = \"#9DA9A0\"\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ef_bg2,  # Consistent with button disabled/container color\n    content_text_style=TextStyle(\n        color=ef_fg, font_family=\"Iosevka, Fira Code, monospace\", size=14\n    ),\n    action_text_color=ef_green,  # Primary accent for actions\n    elevation=1,\n)\n_app_bar_theme_config = AppBarTheme(  # Added",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=ef_bg2,  # Consistent with button disabled/container color\n    content_text_style=TextStyle(\n        color=ef_fg, font_family=\"Iosevka, Fira Code, monospace\", size=14\n    ),\n    action_text_color=ef_green,  # Primary accent for actions\n    elevation=1,\n)\n_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#22282C\",  # Darker than main background",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#22282C\",  # Darker than main background\n    color=ef_fg,\n    elevation=0,\n)\nEVERFOREST_DARK_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=ef_green,\n        primary_container=ef_bg2,\n        secondary=ef_blue,",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "EVERFOREST_DARK_THEME",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "EVERFOREST_DARK_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=ef_green,\n        primary_container=ef_bg2,\n        secondary=ef_blue,\n        secondary_container=ef_bg1,\n        surface=ef_bg0,  # Main dark background\n        surface_variant=ef_bg1,  # Slightly lighter for cards/sections\n        on_surface=ef_fg,  # Main text color\n        outline=ef_bg_visual,  # Muted border color",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.everforest_dark",
        "description": "themes.everforest_dark",
        "peekOfCode": "THEME = EVERFOREST_DARK_THEME",
        "detail": "themes.everforest_dark",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.fluent",
        "description": "themes.fluent",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#323130\",  # Fluent dark gray for notifications\n    content_text_style=TextStyle(color=Colors.WHITE, font_family=\"Segoe UI\", size=14),\n    action_text_color=\"#6CB8F6\",  # Lighter Fluent blue for actions\n    elevation=1,\n)\n_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#0078D4\",  # Fluent Blue (primary)\n    color=Colors.WHITE,  # on_primary\n    elevation=0,  # Fluent AppBars are often flat or have minimal elevation",
        "detail": "themes.fluent",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.fluent",
        "description": "themes.fluent",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#0078D4\",  # Fluent Blue (primary)\n    color=Colors.WHITE,  # on_primary\n    elevation=0,  # Fluent AppBars are often flat or have minimal elevation\n)\n_nav_bar_theme_config = NavigationBarTheme(  # Added\n    indicator_color=\"#0078D4\",  # Fluent Blue for indicator\n    label_text_style=TextStyle(weight=\"w600\", font_family=\"Segoe UI\", size=12),\n    # Other properties like selected_item_color, unselected_item_color can be set\n    # bgcolor = Colors.WHITE, # Or a light gray like #F3F3F3",
        "detail": "themes.fluent",
        "documentation": {}
    },
    {
        "label": "_nav_bar_theme_config",
        "kind": 5,
        "importPath": "themes.fluent",
        "description": "themes.fluent",
        "peekOfCode": "_nav_bar_theme_config = NavigationBarTheme(  # Added\n    indicator_color=\"#0078D4\",  # Fluent Blue for indicator\n    label_text_style=TextStyle(weight=\"w600\", font_family=\"Segoe UI\", size=12),\n    # Other properties like selected_item_color, unselected_item_color can be set\n    # bgcolor = Colors.WHITE, # Or a light gray like #F3F3F3\n)\nFLUENT_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#0078D4\",  # Fluent Blue\n        primary_container=\"#CCE4F6\",  # Lighter Fluent Blue",
        "detail": "themes.fluent",
        "documentation": {}
    },
    {
        "label": "FLUENT_THEME",
        "kind": 5,
        "importPath": "themes.fluent",
        "description": "themes.fluent",
        "peekOfCode": "FLUENT_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#0078D4\",  # Fluent Blue\n        primary_container=\"#CCE4F6\",  # Lighter Fluent Blue\n        secondary=\"#5C2D91\",  # Example: Fluent Purple (can be adjusted)\n        secondary_container=\"#D9C7EA\",  # Lighter Fluent Purple\n        surface=Colors.WHITE,  # Clean white surface\n        surface_variant=\"#F3F3F3\",  # Slightly off-white for different UI parts\n        on_surface=\"#1F1F1F\",  # Dark gray for text on light surfaces\n        outline=\"#D1D1D1\",  # Subtle outlines",
        "detail": "themes.fluent",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.fluent",
        "description": "themes.fluent",
        "peekOfCode": "THEME = FLUENT_THEME  # Added export for THEME",
        "detail": "themes.fluent",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.gemini_inspired",
        "description": "themes.gemini_inspired",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#202124\",  # Dark background for snackbar for contrast\n    content_text_style=TextStyle(color=Colors.WHITE, font_family=\"Roboto\"),\n    action_text_color=\"#8AB4F8\",  # A lighter Google blue for actions\n    elevation=2,\n)\n_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=Colors.WHITE,  # Clean white app bar\n    color=\"#202124\",  # Dark text/icons\n    elevation=0,  # Flat",
        "detail": "themes.gemini_inspired",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.gemini_inspired",
        "description": "themes.gemini_inspired",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=Colors.WHITE,  # Clean white app bar\n    color=\"#202124\",  # Dark text/icons\n    elevation=0,  # Flat\n)\nGEMINI_INSPIRED_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#1A73E8\",  # A bright, optimistic Google Blue\n        primary_container=\"#D2E3FC\",  # Lighter blue for containers/accents\n        secondary=\"#188038\",  # A vibrant Google Green or could be a Teal like #00796B",
        "detail": "themes.gemini_inspired",
        "documentation": {}
    },
    {
        "label": "GEMINI_INSPIRED_THEME",
        "kind": 5,
        "importPath": "themes.gemini_inspired",
        "description": "themes.gemini_inspired",
        "peekOfCode": "GEMINI_INSPIRED_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#1A73E8\",  # A bright, optimistic Google Blue\n        primary_container=\"#D2E3FC\",  # Lighter blue for containers/accents\n        secondary=\"#188038\",  # A vibrant Google Green or could be a Teal like #00796B\n        secondary_container=\"#CEEAD6\",  # Lighter green\n        surface=Colors.WHITE,  # Very clean white surface\n        surface_variant=\"#F1F3F4\",  # Google's light gray for subtle differentiation\n        on_surface=\"#202124\",  # Standard dark gray for text (Google's text color)\n        outline=\"#DADCE0\",  # Google's light border color",
        "detail": "themes.gemini_inspired",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.gemini_inspired",
        "description": "themes.gemini_inspired",
        "peekOfCode": "THEME = GEMINI_INSPIRED_THEME",
        "detail": "themes.gemini_inspired",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.github_dark",
        "description": "themes.github_dark",
        "peekOfCode": "_snack_bar_theme_config = flet.SnackBarTheme(  # Added or ensure it's styled\n    bgcolor=\"#161B22\",  # Consistent with AppBar/surface_variant\n    content_text_style=flet.TextStyle(\n        color=\"#C9D1D9\",\n        font_family=\"Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji\",\n        size=14,\n    ),\n    action_text_color=\"#58A6FF\",  # GitHub's link blue for dark backgrounds\n    elevation=2,\n)",
        "detail": "themes.github_dark",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.github_dark",
        "description": "themes.github_dark",
        "peekOfCode": "_app_bar_theme_config = flet.AppBarTheme(  # Added\n    bgcolor=\"#161B22\",  # surface_variant (Header bg)\n    color=\"#C9D1D9\",  # on_surface (Header text)\n    elevation=0,\n)\nGITHUB_DARK_THEME = flet.Theme(\n    color_scheme=flet.ColorScheme(\n        primary=\"#2F81F7\",  # GitHub Dark Mode Blue (slightly brighter for dark bg)\n        primary_container=\"#153257\",  # Darker blue for containers\n        secondary=\"#3FB950\",  # GitHub Dark Mode Green",
        "detail": "themes.github_dark",
        "documentation": {}
    },
    {
        "label": "GITHUB_DARK_THEME",
        "kind": 5,
        "importPath": "themes.github_dark",
        "description": "themes.github_dark",
        "peekOfCode": "GITHUB_DARK_THEME = flet.Theme(\n    color_scheme=flet.ColorScheme(\n        primary=\"#2F81F7\",  # GitHub Dark Mode Blue (slightly brighter for dark bg)\n        primary_container=\"#153257\",  # Darker blue for containers\n        secondary=\"#3FB950\",  # GitHub Dark Mode Green\n        secondary_container=\"#1A3B25\",  # Darker green\n        surface=\"#0D1117\",  # Main dark background (Canvas default)\n        surface_variant=\"#161B22\",  # Slightly lighter dark for component backgrounds (Canvas inset)\n        on_surface=\"#C9D1D9\",  # Main text color (fg.default)\n        outline=\"#30363D\",  # Border color (border.default)",
        "detail": "themes.github_dark",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.github_dark",
        "description": "themes.github_dark",
        "peekOfCode": "THEME = GITHUB_DARK_THEME",
        "detail": "themes.github_dark",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.github_light",
        "description": "themes.github_light",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(\n    bgcolor=\"#F6F8FA\",  # GitHub header background\n    color=\"#1F2328\",  # GitHub header text\n    elevation=0,  # GitHub headers are often flat or have a subtle bottom border\n)\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#1F2328\",  # Dark background for contrast on light theme\n    content_text_style=TextStyle(\n        color=Colors.WHITE,\n        font_family=\"Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji\",",
        "detail": "themes.github_light",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.github_light",
        "description": "themes.github_light",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#1F2328\",  # Dark background for contrast on light theme\n    content_text_style=TextStyle(\n        color=Colors.WHITE,\n        font_family=\"Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji\",\n        size=14,\n    ),\n    action_text_color=\"#58A6FF\",  # GitHub's link blue\n    elevation=2,\n)",
        "detail": "themes.github_light",
        "documentation": {}
    },
    {
        "label": "GITHUB_LIGHT_THEME",
        "kind": 5,
        "importPath": "themes.github_light",
        "description": "themes.github_light",
        "peekOfCode": "GITHUB_LIGHT_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#0969DA\",  # GitHub Blue\n        primary_container=\"#DDDFE2\",  # Lighter blue/gray for containers\n        secondary=\"#1F883D\",  # GitHub Green\n        secondary_container=\"#C9E7C4\",  # Lighter green\n        surface=Colors.WHITE,  # Main content background\n        surface_variant=\"#F6F8FA\",  # Slightly off-white for component backgrounds\n        on_surface=\"#1F2328\",  # Main text color\n        outline=\"#D0D7DE\",  # Border color",
        "detail": "themes.github_light",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.github_light",
        "description": "themes.github_light",
        "peekOfCode": "THEME = GITHUB_LIGHT_THEME",
        "detail": "themes.github_light",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.google",
        "description": "themes.google",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#323232\",  # Dark background for snackbar (Material standard)\n    content_text_style=TextStyle(\n        color=Colors.WHITE,\n        font_family=\"Roboto, Google Sans, Noto Sans, sans-serif\",  # Added Google Sans\n        size=14,\n    ),\n    action_text_color=\"#8AB4F8\",  # Light blue for action text, common in Google apps\n    elevation=2,  # Subtle shadow\n)",
        "detail": "themes.google",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.google",
        "description": "themes.google",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(\n    bgcolor=Colors.WHITE,\n    color=\"#202124\",\n    elevation=0,  # Often flat in modern Material\n)\nGOOGLE_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#4285F4\",  # Google Blue\n        primary_container=\"#E8F0FE\",  # Light Blue background for elements\n        secondary=\"#34A853\",  # Google Green",
        "detail": "themes.google",
        "documentation": {}
    },
    {
        "label": "GOOGLE_THEME",
        "kind": 5,
        "importPath": "themes.google",
        "description": "themes.google",
        "peekOfCode": "GOOGLE_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#4285F4\",  # Google Blue\n        primary_container=\"#E8F0FE\",  # Light Blue background for elements\n        secondary=\"#34A853\",  # Google Green\n        secondary_container=\"#E6F4EA\",  # Light Green background\n        surface=Colors.WHITE,\n        on_surface=\"#202124\",  # Dark Gray for text\n        background=\"#F8F9FA\",  # Very light gray page background\n        on_background=\"#202124\",",
        "detail": "themes.google",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.google",
        "description": "themes.google",
        "peekOfCode": "THEME = GOOGLE_THEME",
        "detail": "themes.google",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.gruvbox_dark",
        "description": "themes.gruvbox_dark",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(  # Added SnackBarTheme config\n    bgcolor=\"#3c3836\",  # Gruvbox dark0_hard\n    content_text_style=TextStyle(\n        color=\"#ebdbb2\",  # Gruvbox fg\n        font_family=\"JetBrains Mono, Consolas, monospace\",\n        size=14,\n    ),\n    action_text_color=\"#fe8019\",  # Gruvbox bright orange for actions\n    elevation=1,\n)",
        "detail": "themes.gruvbox_dark",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.gruvbox_dark",
        "description": "themes.gruvbox_dark",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added AppBarTheme config\n    bgcolor=\"#1d2021\",  # Gruvbox dark0_soft (darker for app bar)\n    color=\"#ebdbb2\",  # Gruvbox fg\n    elevation=0,\n)\nGRUVBOX_DARK_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#d79921\",  # Yellow\n        primary_container=\"#a9781a\",  # Darker Yellow\n        secondary=\"#458588\",  # Blue",
        "detail": "themes.gruvbox_dark",
        "documentation": {}
    },
    {
        "label": "GRUVBOX_DARK_THEME",
        "kind": 5,
        "importPath": "themes.gruvbox_dark",
        "description": "themes.gruvbox_dark",
        "peekOfCode": "GRUVBOX_DARK_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#d79921\",  # Yellow\n        primary_container=\"#a9781a\",  # Darker Yellow\n        secondary=\"#458588\",  # Blue\n        secondary_container=\"#35686a\",  # Darker Blue\n        surface=\"#3c3836\",  # bg1 (slightly lighter than main bg)\n        on_surface=\"#ebdbb2\",  # fg\n        background=\"#282828\",  # bg\n        on_background=\"#ebdbb2\",  # fg",
        "detail": "themes.gruvbox_dark",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.gruvbox_dark",
        "description": "themes.gruvbox_dark",
        "peekOfCode": "THEME = GRUVBOX_DARK_THEME",
        "detail": "themes.gruvbox_dark",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.humanist",
        "description": "themes.humanist",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#4A4A4A\",  # Dark warm gray from on_surface\n    content_text_style=TextStyle(\n        color=\"#F5F3F0\", font_family=\"Roboto\", size=14  # surface color for text\n    ),\n    action_text_color=\"#A88B79\",  # secondary color for actions\n    elevation=2,\n)\n_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#5D7C8A\",  # primary color",
        "detail": "themes.humanist",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.humanist",
        "description": "themes.humanist",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#5D7C8A\",  # primary color\n    color=Colors.WHITE,  # on_primary\n    elevation=1,  # Subtle elevation\n)\nTHEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#5D7C8A\",  # Muted Slate Blue/Teal\n        primary_container=\"#D1DDE2\",  # Lighter version of primary\n        secondary=\"#A88B79\",  # Warm Taupe/Light Brown",
        "detail": "themes.humanist",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.humanist",
        "description": "themes.humanist",
        "peekOfCode": "THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#5D7C8A\",  # Muted Slate Blue/Teal\n        primary_container=\"#D1DDE2\",  # Lighter version of primary\n        secondary=\"#A88B79\",  # Warm Taupe/Light Brown\n        secondary_container=\"#E3D9D2\",  # Lighter version of secondary\n        surface=\"#F5F3F0\",  # Warm Off-White / Very Light Beige\n        on_surface=\"#4A4A4A\",  # Dark Warm Gray for text\n        outline=\"#B0AFAF\",  # Soft Gray for outlines\n        on_primary=Colors.WHITE,",
        "detail": "themes.humanist",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.material",
        "description": "themes.material",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#323232\",  # Standard Material dark snackbar\n    content_text_style=TextStyle(\n        color=Colors.WHITE, font_family=\"Roboto, Google Sans\", size=14\n    ),\n    action_text_color=\"#8AB4F8\",  # Light blue for actions on dark snackbar\n    elevation=2,\n)\n_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#4285F4\",  # Google Blue (primary)",
        "detail": "themes.material",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.material",
        "description": "themes.material",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#4285F4\",  # Google Blue (primary)\n    color=Colors.WHITE,  # on_primary\n    elevation=4,  # Material AppBars often have some elevation\n)\nTHEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#4285F4\",  # Google Blue\n        primary_container=\"#D2E3FC\",  # Lighter Google Blue\n        secondary=\"#0F9D58\",  # Google Green",
        "detail": "themes.material",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.material",
        "description": "themes.material",
        "peekOfCode": "THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#4285F4\",  # Google Blue\n        primary_container=\"#D2E3FC\",  # Lighter Google Blue\n        secondary=\"#0F9D58\",  # Google Green\n        secondary_container=\"#B7E6C9\",  # Lighter Google Green\n        surface=Colors.WHITE,\n        surface_variant=\"#E0E0E0\",  # Material Design surface variant (e.g., for cards on dark themes or subtle backgrounds)\n        on_surface=\"#202124\",  # Google Dark Gray\n        outline=\"#DADCE0\",  # Google Border",
        "detail": "themes.material",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.midnight",
        "description": "themes.midnight",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#1A233A\",  # surface_variant or a distinct dark color\n    content_text_style=TextStyle(\n        color=\"#E0E0E0\", font_family=\"Inter, Roboto\", size=14\n    ),  # on_surface color, added size\n    elevation=8,  # Adjusted elevation\n    action_text_color=\"#00E5FF\",  # Primary color for actions\n)\n_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#0A0F1E\",  # surface color (Very Dark Navy/Midnight Blue)",
        "detail": "themes.midnight",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.midnight",
        "description": "themes.midnight",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#0A0F1E\",  # surface color (Very Dark Navy/Midnight Blue)\n    color=\"#00E5FF\",  # primary color for titles/icons\n    elevation=0,  # Flat\n)\nTHEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#00E5FF\",  # Vibrant Cyan/Aqua\n        primary_container=\"#00B8D4\",  # Darker Cyan\n        secondary=\"#76FF03\",  # Vibrant Lime Green",
        "detail": "themes.midnight",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.midnight",
        "description": "themes.midnight",
        "peekOfCode": "THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#00E5FF\",  # Vibrant Cyan/Aqua\n        primary_container=\"#00B8D4\",  # Darker Cyan\n        secondary=\"#76FF03\",  # Vibrant Lime Green\n        secondary_container=\"#64DD17\",  # Darker Lime Green\n        surface=\"#0A0F1E\",  # Very Dark Navy/Midnight Blue\n        surface_variant=\"#1A233A\",  # Slightly Lighter Dark Navy (for cards, etc.)\n        on_surface=\"#E0E0E0\",  # Light Gray for text\n        outline=\"#333E56\",  # Muted Blue-Gray for outlines",
        "detail": "themes.midnight",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.modern_classic",
        "description": "themes.modern_classic",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#2D3748\",  # on_surface color (dark gray)\n    content_text_style=TextStyle(\n        color=\"#F7FAFC\",  # surface color for text\n        font_family=\"Roboto, Segoe UI, San Francisco\",\n        size=14,\n    ),\n    action_text_color=\"#87CEEB\",  # A lighter, classic sky blue for actions\n    elevation=2,\n)",
        "detail": "themes.modern_classic",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.modern_classic",
        "description": "themes.modern_classic",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added\n    bgcolor=\"#4A80C0\",  # Primary color for a distinct title bar feel\n    color=Colors.WHITE,  # White text/icons on app bar\n    elevation=1,  # Subtle elevation\n)\nMODERN_CLASSIC_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#4A80C0\",  # Refined, slightly desaturated Blue (classic but modern)\n        primary_container=\"#D2E0F0\",  # Lighter shade of primary\n        secondary=\"#A0AEC0\",  # Muted Silver/Gray (classic accent)",
        "detail": "themes.modern_classic",
        "documentation": {}
    },
    {
        "label": "MODERN_CLASSIC_THEME",
        "kind": 5,
        "importPath": "themes.modern_classic",
        "description": "themes.modern_classic",
        "peekOfCode": "MODERN_CLASSIC_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#4A80C0\",  # Refined, slightly desaturated Blue (classic but modern)\n        primary_container=\"#D2E0F0\",  # Lighter shade of primary\n        secondary=\"#A0AEC0\",  # Muted Silver/Gray (classic accent)\n        secondary_container=\"#E2E8F0\",  # Lighter Silver/Gray\n        surface=\"#F7FAFC\",  # Very Light Gray / Off-White (clean and bright)\n        surface_variant=\"#EDF2F7\",  # Slightly different light gray for UI elements\n        on_surface=\"#2D3748\",  # Dark Gray for text (good contrast)\n        outline=\"#CBD5E0\",  # Soft Gray for outlines/borders",
        "detail": "themes.modern_classic",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.modern_classic",
        "description": "themes.modern_classic",
        "peekOfCode": "THEME = MODERN_CLASSIC_THEME",
        "detail": "themes.modern_classic",
        "documentation": {}
    },
    {
        "label": "mono_bg",
        "kind": 5,
        "importPath": "themes.monokai",
        "description": "themes.monokai",
        "peekOfCode": "mono_bg = \"#272822\"  # Background\nmono_fg = \"#F8F8F2\"  # Foreground/Text\nmono_comment = \"#75715E\"\nmono_pink = \"#F92672\"\nmono_green = \"#A6E22E\"\nmono_yellow = \"#E6DB74\"\nmono_purple = \"#AE81FF\"\nmono_orange = \"#FD971F\"\nmono_blue = \"#66D9EF\"  # Cyan/Blue\n_snack_bar_theme_config = SnackBarTheme(",
        "detail": "themes.monokai",
        "documentation": {}
    },
    {
        "label": "mono_fg",
        "kind": 5,
        "importPath": "themes.monokai",
        "description": "themes.monokai",
        "peekOfCode": "mono_fg = \"#F8F8F2\"  # Foreground/Text\nmono_comment = \"#75715E\"\nmono_pink = \"#F92672\"\nmono_green = \"#A6E22E\"\nmono_yellow = \"#E6DB74\"\nmono_purple = \"#AE81FF\"\nmono_orange = \"#FD971F\"\nmono_blue = \"#66D9EF\"  # Cyan/Blue\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#3E3D32\",  # Darker variant from Monokai palette",
        "detail": "themes.monokai",
        "documentation": {}
    },
    {
        "label": "mono_comment",
        "kind": 5,
        "importPath": "themes.monokai",
        "description": "themes.monokai",
        "peekOfCode": "mono_comment = \"#75715E\"\nmono_pink = \"#F92672\"\nmono_green = \"#A6E22E\"\nmono_yellow = \"#E6DB74\"\nmono_purple = \"#AE81FF\"\nmono_orange = \"#FD971F\"\nmono_blue = \"#66D9EF\"  # Cyan/Blue\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#3E3D32\",  # Darker variant from Monokai palette\n    content_text_style=TextStyle(",
        "detail": "themes.monokai",
        "documentation": {}
    },
    {
        "label": "mono_pink",
        "kind": 5,
        "importPath": "themes.monokai",
        "description": "themes.monokai",
        "peekOfCode": "mono_pink = \"#F92672\"\nmono_green = \"#A6E22E\"\nmono_yellow = \"#E6DB74\"\nmono_purple = \"#AE81FF\"\nmono_orange = \"#FD971F\"\nmono_blue = \"#66D9EF\"  # Cyan/Blue\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#3E3D32\",  # Darker variant from Monokai palette\n    content_text_style=TextStyle(\n        color=mono_fg,",
        "detail": "themes.monokai",
        "documentation": {}
    },
    {
        "label": "mono_green",
        "kind": 5,
        "importPath": "themes.monokai",
        "description": "themes.monokai",
        "peekOfCode": "mono_green = \"#A6E22E\"\nmono_yellow = \"#E6DB74\"\nmono_purple = \"#AE81FF\"\nmono_orange = \"#FD971F\"\nmono_blue = \"#66D9EF\"  # Cyan/Blue\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#3E3D32\",  # Darker variant from Monokai palette\n    content_text_style=TextStyle(\n        color=mono_fg,\n        font_family=\"Consolas, Monaco, Lucida Console, monospace\",",
        "detail": "themes.monokai",
        "documentation": {}
    },
    {
        "label": "mono_yellow",
        "kind": 5,
        "importPath": "themes.monokai",
        "description": "themes.monokai",
        "peekOfCode": "mono_yellow = \"#E6DB74\"\nmono_purple = \"#AE81FF\"\nmono_orange = \"#FD971F\"\nmono_blue = \"#66D9EF\"  # Cyan/Blue\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#3E3D32\",  # Darker variant from Monokai palette\n    content_text_style=TextStyle(\n        color=mono_fg,\n        font_family=\"Consolas, Monaco, Lucida Console, monospace\",\n        size=14,",
        "detail": "themes.monokai",
        "documentation": {}
    },
    {
        "label": "mono_purple",
        "kind": 5,
        "importPath": "themes.monokai",
        "description": "themes.monokai",
        "peekOfCode": "mono_purple = \"#AE81FF\"\nmono_orange = \"#FD971F\"\nmono_blue = \"#66D9EF\"  # Cyan/Blue\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#3E3D32\",  # Darker variant from Monokai palette\n    content_text_style=TextStyle(\n        color=mono_fg,\n        font_family=\"Consolas, Monaco, Lucida Console, monospace\",\n        size=14,\n    ),",
        "detail": "themes.monokai",
        "documentation": {}
    },
    {
        "label": "mono_orange",
        "kind": 5,
        "importPath": "themes.monokai",
        "description": "themes.monokai",
        "peekOfCode": "mono_orange = \"#FD971F\"\nmono_blue = \"#66D9EF\"  # Cyan/Blue\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#3E3D32\",  # Darker variant from Monokai palette\n    content_text_style=TextStyle(\n        color=mono_fg,\n        font_family=\"Consolas, Monaco, Lucida Console, monospace\",\n        size=14,\n    ),\n    action_text_color=mono_pink,  # Pink accent for actions",
        "detail": "themes.monokai",
        "documentation": {}
    },
    {
        "label": "mono_blue",
        "kind": 5,
        "importPath": "themes.monokai",
        "description": "themes.monokai",
        "peekOfCode": "mono_blue = \"#66D9EF\"  # Cyan/Blue\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#3E3D32\",  # Darker variant from Monokai palette\n    content_text_style=TextStyle(\n        color=mono_fg,\n        font_family=\"Consolas, Monaco, Lucida Console, monospace\",\n        size=14,\n    ),\n    action_text_color=mono_pink,  # Pink accent for actions\n    elevation=2,",
        "detail": "themes.monokai",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.monokai",
        "description": "themes.monokai",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=\"#3E3D32\",  # Darker variant from Monokai palette\n    content_text_style=TextStyle(\n        color=mono_fg,\n        font_family=\"Consolas, Monaco, Lucida Console, monospace\",\n        size=14,\n    ),\n    action_text_color=mono_pink,  # Pink accent for actions\n    elevation=2,\n)",
        "detail": "themes.monokai",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.monokai",
        "description": "themes.monokai",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(\n    bgcolor=\"#1B1C17\",  # Even darker for app bar\n    color=mono_fg,\n    elevation=0,\n)\nMONOKAI_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=mono_pink,  # Monokai Pink\n        primary_container=\"#3E3D32\",  # Darker variant for containers\n        secondary=mono_green,  # Monokai Green",
        "detail": "themes.monokai",
        "documentation": {}
    },
    {
        "label": "MONOKAI_THEME",
        "kind": 5,
        "importPath": "themes.monokai",
        "description": "themes.monokai",
        "peekOfCode": "MONOKAI_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=mono_pink,  # Monokai Pink\n        primary_container=\"#3E3D32\",  # Darker variant for containers\n        secondary=mono_green,  # Monokai Green\n        secondary_container=\"#3E3D32\",\n        surface=mono_bg,  # Main dark background\n        surface_variant=\"#20201A\",  # Slightly darker for distinct areas\n        on_surface=mono_fg,  # Light text on dark surface\n        outline=mono_comment,  # Muted comment color for borders",
        "detail": "themes.monokai",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.monokai",
        "description": "themes.monokai",
        "peekOfCode": "THEME = MONOKAI_THEME",
        "detail": "themes.monokai",
        "documentation": {}
    },
    {
        "label": "nord0",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord0 = \"#2E3440\"  # Polar Night (Darkest)\nnord1 = \"#3B4252\"  # Polar Night\nnord2 = \"#434C5E\"  # Polar Night\nnord3 = \"#4C566A\"  # Polar Night (Lightest)\nnord4 = \"#D8DEE9\"  # Snow Storm (Darkest)\nnord5 = \"#E5E9F0\"  # Snow Storm\nnord6 = \"#ECEFF4\"  # Snow Storm (Lightest)\nnord7 = \"#8FBCBB\"  # Frost (Greenish Cyan)\nnord8 = \"#88C0D0\"  # Frost (Icy Blue)\nnord9 = \"#81A1C1\"  # Frost (Bluish Gray)",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord1",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord1 = \"#3B4252\"  # Polar Night\nnord2 = \"#434C5E\"  # Polar Night\nnord3 = \"#4C566A\"  # Polar Night (Lightest)\nnord4 = \"#D8DEE9\"  # Snow Storm (Darkest)\nnord5 = \"#E5E9F0\"  # Snow Storm\nnord6 = \"#ECEFF4\"  # Snow Storm (Lightest)\nnord7 = \"#8FBCBB\"  # Frost (Greenish Cyan)\nnord8 = \"#88C0D0\"  # Frost (Icy Blue)\nnord9 = \"#81A1C1\"  # Frost (Bluish Gray)\nnord10 = \"#5E81AC\"  # Frost (Darker Blue)",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord2",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord2 = \"#434C5E\"  # Polar Night\nnord3 = \"#4C566A\"  # Polar Night (Lightest)\nnord4 = \"#D8DEE9\"  # Snow Storm (Darkest)\nnord5 = \"#E5E9F0\"  # Snow Storm\nnord6 = \"#ECEFF4\"  # Snow Storm (Lightest)\nnord7 = \"#8FBCBB\"  # Frost (Greenish Cyan)\nnord8 = \"#88C0D0\"  # Frost (Icy Blue)\nnord9 = \"#81A1C1\"  # Frost (Bluish Gray)\nnord10 = \"#5E81AC\"  # Frost (Darker Blue)\nnord11 = \"#BF616A\"  # Aurora (Red)",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord3",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord3 = \"#4C566A\"  # Polar Night (Lightest)\nnord4 = \"#D8DEE9\"  # Snow Storm (Darkest)\nnord5 = \"#E5E9F0\"  # Snow Storm\nnord6 = \"#ECEFF4\"  # Snow Storm (Lightest)\nnord7 = \"#8FBCBB\"  # Frost (Greenish Cyan)\nnord8 = \"#88C0D0\"  # Frost (Icy Blue)\nnord9 = \"#81A1C1\"  # Frost (Bluish Gray)\nnord10 = \"#5E81AC\"  # Frost (Darker Blue)\nnord11 = \"#BF616A\"  # Aurora (Red)\nnord12 = \"#D08770\"  # Aurora (Orange)",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord4",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord4 = \"#D8DEE9\"  # Snow Storm (Darkest)\nnord5 = \"#E5E9F0\"  # Snow Storm\nnord6 = \"#ECEFF4\"  # Snow Storm (Lightest)\nnord7 = \"#8FBCBB\"  # Frost (Greenish Cyan)\nnord8 = \"#88C0D0\"  # Frost (Icy Blue)\nnord9 = \"#81A1C1\"  # Frost (Bluish Gray)\nnord10 = \"#5E81AC\"  # Frost (Darker Blue)\nnord11 = \"#BF616A\"  # Aurora (Red)\nnord12 = \"#D08770\"  # Aurora (Orange)\nnord13 = \"#EBCB8B\"  # Aurora (Yellow)",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord5",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord5 = \"#E5E9F0\"  # Snow Storm\nnord6 = \"#ECEFF4\"  # Snow Storm (Lightest)\nnord7 = \"#8FBCBB\"  # Frost (Greenish Cyan)\nnord8 = \"#88C0D0\"  # Frost (Icy Blue)\nnord9 = \"#81A1C1\"  # Frost (Bluish Gray)\nnord10 = \"#5E81AC\"  # Frost (Darker Blue)\nnord11 = \"#BF616A\"  # Aurora (Red)\nnord12 = \"#D08770\"  # Aurora (Orange)\nnord13 = \"#EBCB8B\"  # Aurora (Yellow)\nnord14 = \"#A3BE8C\"  # Aurora (Green)",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord6",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord6 = \"#ECEFF4\"  # Snow Storm (Lightest)\nnord7 = \"#8FBCBB\"  # Frost (Greenish Cyan)\nnord8 = \"#88C0D0\"  # Frost (Icy Blue)\nnord9 = \"#81A1C1\"  # Frost (Bluish Gray)\nnord10 = \"#5E81AC\"  # Frost (Darker Blue)\nnord11 = \"#BF616A\"  # Aurora (Red)\nnord12 = \"#D08770\"  # Aurora (Orange)\nnord13 = \"#EBCB8B\"  # Aurora (Yellow)\nnord14 = \"#A3BE8C\"  # Aurora (Green)\nnord15 = \"#B48EAD\"  # Aurora (Purple)",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord7",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord7 = \"#8FBCBB\"  # Frost (Greenish Cyan)\nnord8 = \"#88C0D0\"  # Frost (Icy Blue)\nnord9 = \"#81A1C1\"  # Frost (Bluish Gray)\nnord10 = \"#5E81AC\"  # Frost (Darker Blue)\nnord11 = \"#BF616A\"  # Aurora (Red)\nnord12 = \"#D08770\"  # Aurora (Orange)\nnord13 = \"#EBCB8B\"  # Aurora (Yellow)\nnord14 = \"#A3BE8C\"  # Aurora (Green)\nnord15 = \"#B48EAD\"  # Aurora (Purple)\n_snack_bar_theme_config = SnackBarTheme(",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord8",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord8 = \"#88C0D0\"  # Frost (Icy Blue)\nnord9 = \"#81A1C1\"  # Frost (Bluish Gray)\nnord10 = \"#5E81AC\"  # Frost (Darker Blue)\nnord11 = \"#BF616A\"  # Aurora (Red)\nnord12 = \"#D08770\"  # Aurora (Orange)\nnord13 = \"#EBCB8B\"  # Aurora (Yellow)\nnord14 = \"#A3BE8C\"  # Aurora (Green)\nnord15 = \"#B48EAD\"  # Aurora (Purple)\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=nord1,  # Polar Night for snackbar background",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord9",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord9 = \"#81A1C1\"  # Frost (Bluish Gray)\nnord10 = \"#5E81AC\"  # Frost (Darker Blue)\nnord11 = \"#BF616A\"  # Aurora (Red)\nnord12 = \"#D08770\"  # Aurora (Orange)\nnord13 = \"#EBCB8B\"  # Aurora (Yellow)\nnord14 = \"#A3BE8C\"  # Aurora (Green)\nnord15 = \"#B48EAD\"  # Aurora (Purple)\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=nord1,  # Polar Night for snackbar background\n    content_text_style=TextStyle(",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord10",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord10 = \"#5E81AC\"  # Frost (Darker Blue)\nnord11 = \"#BF616A\"  # Aurora (Red)\nnord12 = \"#D08770\"  # Aurora (Orange)\nnord13 = \"#EBCB8B\"  # Aurora (Yellow)\nnord14 = \"#A3BE8C\"  # Aurora (Green)\nnord15 = \"#B48EAD\"  # Aurora (Purple)\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=nord1,  # Polar Night for snackbar background\n    content_text_style=TextStyle(\n        color=nord5,  # Snow Storm for text",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord11",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord11 = \"#BF616A\"  # Aurora (Red)\nnord12 = \"#D08770\"  # Aurora (Orange)\nnord13 = \"#EBCB8B\"  # Aurora (Yellow)\nnord14 = \"#A3BE8C\"  # Aurora (Green)\nnord15 = \"#B48EAD\"  # Aurora (Purple)\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=nord1,  # Polar Night for snackbar background\n    content_text_style=TextStyle(\n        color=nord5,  # Snow Storm for text\n        font_family=\"Source Sans Pro, Segoe UI, Noto Sans, sans-serif\",",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord12",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord12 = \"#D08770\"  # Aurora (Orange)\nnord13 = \"#EBCB8B\"  # Aurora (Yellow)\nnord14 = \"#A3BE8C\"  # Aurora (Green)\nnord15 = \"#B48EAD\"  # Aurora (Purple)\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=nord1,  # Polar Night for snackbar background\n    content_text_style=TextStyle(\n        color=nord5,  # Snow Storm for text\n        font_family=\"Source Sans Pro, Segoe UI, Noto Sans, sans-serif\",\n        size=14,",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord13",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord13 = \"#EBCB8B\"  # Aurora (Yellow)\nnord14 = \"#A3BE8C\"  # Aurora (Green)\nnord15 = \"#B48EAD\"  # Aurora (Purple)\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=nord1,  # Polar Night for snackbar background\n    content_text_style=TextStyle(\n        color=nord5,  # Snow Storm for text\n        font_family=\"Source Sans Pro, Segoe UI, Noto Sans, sans-serif\",\n        size=14,\n    ),",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord14",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord14 = \"#A3BE8C\"  # Aurora (Green)\nnord15 = \"#B48EAD\"  # Aurora (Purple)\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=nord1,  # Polar Night for snackbar background\n    content_text_style=TextStyle(\n        color=nord5,  # Snow Storm for text\n        font_family=\"Source Sans Pro, Segoe UI, Noto Sans, sans-serif\",\n        size=14,\n    ),\n    action_text_color=nord8,  # Frost (Icy Blue) for actions",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "nord15",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "nord15 = \"#B48EAD\"  # Aurora (Purple)\n_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=nord1,  # Polar Night for snackbar background\n    content_text_style=TextStyle(\n        color=nord5,  # Snow Storm for text\n        font_family=\"Source Sans Pro, Segoe UI, Noto Sans, sans-serif\",\n        size=14,\n    ),\n    action_text_color=nord8,  # Frost (Icy Blue) for actions\n    elevation=1,",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(\n    bgcolor=nord1,  # Polar Night for snackbar background\n    content_text_style=TextStyle(\n        color=nord5,  # Snow Storm for text\n        font_family=\"Source Sans Pro, Segoe UI, Noto Sans, sans-serif\",\n        size=14,\n    ),\n    action_text_color=nord8,  # Frost (Icy Blue) for actions\n    elevation=1,\n)",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(\n    bgcolor=nord0,  # Darkest Polar Night for app bar\n    color=nord6,  # Lightest Snow Storm for text/icons\n    elevation=0,\n)\nNORD_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=nord10,  # Frost Darker Blue (good for primary actions)\n        primary_container=nord3,  # Polar Night Lightest (for containers related to primary)\n        secondary=nord7,  # Frost Greenish Cyan (good for secondary accents)",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "NORD_THEME",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "NORD_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=nord10,  # Frost Darker Blue (good for primary actions)\n        primary_container=nord3,  # Polar Night Lightest (for containers related to primary)\n        secondary=nord7,  # Frost Greenish Cyan (good for secondary accents)\n        secondary_container=nord2,  # Polar Night (for containers related to secondary)\n        surface=nord1,  # Polar Night (main dark surface)\n        surface_variant=nord0,  # Polar Night Darkest (for cards or distinct sections)\n        on_surface=nord5,  # Snow Storm (text on dark surface)\n        outline=nord3,  # Polar Night Lightest (for borders)",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.nord",
        "description": "themes.nord",
        "peekOfCode": "THEME = NORD_THEME",
        "detail": "themes.nord",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.office_dark_blue",
        "description": "themes.office_dark_blue",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(  # Added SnackBarTheme config\n    bgcolor=\"#1A2E4F\",  # A very dark blue, darker than surface\n    content_text_style=TextStyle(\n        color=Colors.WHITE, font_family=\"Segoe UI, Calibri, sans-serif\", size=14\n    ),\n    action_text_color=\"#FFB900\",  # A lighter, more vibrant gold for actions\n    elevation=2,\n)\n_app_bar_theme_config = AppBarTheme(  # Added AppBarTheme config\n    bgcolor=\"#1F3A66\",  # Background color",
        "detail": "themes.office_dark_blue",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.office_dark_blue",
        "description": "themes.office_dark_blue",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added AppBarTheme config\n    bgcolor=\"#1F3A66\",  # Background color\n    color=Colors.WHITE,\n    elevation=0,  # Often flat in Office themes\n)\nOFFICE_DARK_BLUE_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#2D579A\",\n        primary_container=\"#4A78B0\",\n        secondary=\"#E8A000\",  # Gold/Orange accent",
        "detail": "themes.office_dark_blue",
        "documentation": {}
    },
    {
        "label": "OFFICE_DARK_BLUE_THEME",
        "kind": 5,
        "importPath": "themes.office_dark_blue",
        "description": "themes.office_dark_blue",
        "peekOfCode": "OFFICE_DARK_BLUE_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#2D579A\",\n        primary_container=\"#4A78B0\",\n        secondary=\"#E8A000\",  # Gold/Orange accent\n        secondary_container=\"#C78C00\",  # Darker gold\n        surface=\"#25467A\",  # Surface for cards, dialogs\n        on_surface=\"#E1E1E1\",  # Light gray text on surfaces\n        background=\"#1F3A66\",  # Main dark blue background\n        on_background=\"#FFFFFF\",  # White text on main background",
        "detail": "themes.office_dark_blue",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.office_dark_blue",
        "description": "themes.office_dark_blue",
        "peekOfCode": "THEME = OFFICE_DARK_BLUE_THEME",
        "detail": "themes.office_dark_blue",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.one_dark_pro",
        "description": "themes.one_dark_pro",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(  # Added SnackBarTheme config\n    bgcolor=\"#21252b\",  # Gutter background color\n    content_text_style=TextStyle(\n        color=\"#abb2bf\",  # Main foreground\n        font_family=\"Fira Code, Consolas, Monaco, monospace\",\n        size=14,\n    ),\n    action_text_color=\"#61afef\",  # Blue accent for actions\n    elevation=1,\n)",
        "detail": "themes.one_dark_pro",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.one_dark_pro",
        "description": "themes.one_dark_pro",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added AppBarTheme config\n    bgcolor=\"#1B1F23\",  # Even darker for app bar (custom)\n    color=\"#abb2bf\",  # Main foreground\n    elevation=0,\n)\nONE_DARK_PRO_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#61afef\",  # Blue\n        primary_container=\"#3A404A\",  # Darker blue-gray\n        secondary=\"#98c379\",  # Green",
        "detail": "themes.one_dark_pro",
        "documentation": {}
    },
    {
        "label": "ONE_DARK_PRO_THEME",
        "kind": 5,
        "importPath": "themes.one_dark_pro",
        "description": "themes.one_dark_pro",
        "peekOfCode": "ONE_DARK_PRO_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#61afef\",  # Blue\n        primary_container=\"#3A404A\",  # Darker blue-gray\n        secondary=\"#98c379\",  # Green\n        secondary_container=\"#42503A\",  # Darker green-gray\n        surface=\"#21252b\",  # Gutter background / slightly darker surface\n        on_surface=\"#abb2bf\",  # Main text color\n        background=\"#282c34\",  # Main background\n        on_background=\"#abb2bf\",",
        "detail": "themes.one_dark_pro",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.one_dark_pro",
        "description": "themes.one_dark_pro",
        "peekOfCode": "THEME = ONE_DARK_PRO_THEME",
        "detail": "themes.one_dark_pro",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.solarized_light",
        "description": "themes.solarized_light",
        "peekOfCode": "_snack_bar_theme_config = SnackBarTheme(  # Added SnackBarTheme config\n    bgcolor=\"#073642\",  # base02 (dark background for contrast)\n    content_text_style=TextStyle(\n        color=\"#eee8d5\",  # base2 (light text)\n        font_family=\"Source Code Pro, Menlo, Monaco, Consolas, monospace\",\n        size=14,\n    ),\n    action_text_color=\"#2aa198\",  # cyan for actions\n    elevation=1,\n)",
        "detail": "themes.solarized_light",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.solarized_light",
        "description": "themes.solarized_light",
        "peekOfCode": "_app_bar_theme_config = AppBarTheme(  # Added AppBarTheme config\n    bgcolor=\"#fdf6e3\",  # base3 (lightest background)\n    color=\"#586e75\",  # base01 (dark text for light app bar)\n    elevation=0,  # Solarized often emphasizes flatness\n)\nSOLARIZED_LIGHT_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#268bd2\",  # Blue\n        primary_container=\"#DDEEFF\",  # Lighter blue for containers\n        secondary=\"#859900\",  # Green",
        "detail": "themes.solarized_light",
        "documentation": {}
    },
    {
        "label": "SOLARIZED_LIGHT_THEME",
        "kind": 5,
        "importPath": "themes.solarized_light",
        "description": "themes.solarized_light",
        "peekOfCode": "SOLARIZED_LIGHT_THEME = Theme(\n    color_scheme=ColorScheme(\n        primary=\"#268bd2\",  # Blue\n        primary_container=\"#DDEEFF\",  # Lighter blue for containers\n        secondary=\"#859900\",  # Green\n        secondary_container=\"#EEF5DB\",  # Lighter green\n        surface=\"#eee8d5\",  # base2 (Content background)\n        on_surface=\"#586e75\",  # base01 (Primary text)\n        background=\"#fdf6e3\",  # base3 (Overall page background)\n        on_background=\"#586e75\",  # base01",
        "detail": "themes.solarized_light",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.solarized_light",
        "description": "themes.solarized_light",
        "peekOfCode": "THEME = SOLARIZED_LIGHT_THEME",
        "detail": "themes.solarized_light",
        "documentation": {}
    },
    {
        "label": "tn_storm_bg",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "tn_storm_bg = \"#24283B\"  # Background\ntn_storm_fg = \"#C0CAF5\"  # Foreground\ntn_comment = \"#5C6370\"  # Comments\ntn_blue = \"#7AA2F7\"\ntn_cyan = \"#7DCFFF\"\ntn_green = \"#9ECE6A\"\ntn_orange = \"#FF9E64\"\ntn_pink = \"#F7768E\"  # Red/Pink\ntn_purple = \"#BB9AF7\"\ntn_yellow = \"#E0AF68\"",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "tn_storm_fg",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "tn_storm_fg = \"#C0CAF5\"  # Foreground\ntn_comment = \"#5C6370\"  # Comments\ntn_blue = \"#7AA2F7\"\ntn_cyan = \"#7DCFFF\"\ntn_green = \"#9ECE6A\"\ntn_orange = \"#FF9E64\"\ntn_pink = \"#F7768E\"  # Red/Pink\ntn_purple = \"#BB9AF7\"\ntn_yellow = \"#E0AF68\"\ntn_bg_dark = \"#1F2335\"  # Darker background for UI elements like status bar",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "tn_comment",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "tn_comment = \"#5C6370\"  # Comments\ntn_blue = \"#7AA2F7\"\ntn_cyan = \"#7DCFFF\"\ntn_green = \"#9ECE6A\"\ntn_orange = \"#FF9E64\"\ntn_pink = \"#F7768E\"  # Red/Pink\ntn_purple = \"#BB9AF7\"\ntn_yellow = \"#E0AF68\"\ntn_bg_dark = \"#1F2335\"  # Darker background for UI elements like status bar\ntn_bg_highlight = \"#292E42\"  # Active/hover background",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "tn_blue",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "tn_blue = \"#7AA2F7\"\ntn_cyan = \"#7DCFFF\"\ntn_green = \"#9ECE6A\"\ntn_orange = \"#FF9E64\"\ntn_pink = \"#F7768E\"  # Red/Pink\ntn_purple = \"#BB9AF7\"\ntn_yellow = \"#E0AF68\"\ntn_bg_dark = \"#1F2335\"  # Darker background for UI elements like status bar\ntn_bg_highlight = \"#292E42\"  # Active/hover background\n_snack_bar_theme_config = flet.SnackBarTheme(",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "tn_cyan",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "tn_cyan = \"#7DCFFF\"\ntn_green = \"#9ECE6A\"\ntn_orange = \"#FF9E64\"\ntn_pink = \"#F7768E\"  # Red/Pink\ntn_purple = \"#BB9AF7\"\ntn_yellow = \"#E0AF68\"\ntn_bg_dark = \"#1F2335\"  # Darker background for UI elements like status bar\ntn_bg_highlight = \"#292E42\"  # Active/hover background\n_snack_bar_theme_config = flet.SnackBarTheme(\n    bgcolor=tn_bg_highlight,  # Consistent with primary_container",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "tn_green",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "tn_green = \"#9ECE6A\"\ntn_orange = \"#FF9E64\"\ntn_pink = \"#F7768E\"  # Red/Pink\ntn_purple = \"#BB9AF7\"\ntn_yellow = \"#E0AF68\"\ntn_bg_dark = \"#1F2335\"  # Darker background for UI elements like status bar\ntn_bg_highlight = \"#292E42\"  # Active/hover background\n_snack_bar_theme_config = flet.SnackBarTheme(\n    bgcolor=tn_bg_highlight,  # Consistent with primary_container\n    content_text_style=flet.TextStyle(",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "tn_orange",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "tn_orange = \"#FF9E64\"\ntn_pink = \"#F7768E\"  # Red/Pink\ntn_purple = \"#BB9AF7\"\ntn_yellow = \"#E0AF68\"\ntn_bg_dark = \"#1F2335\"  # Darker background for UI elements like status bar\ntn_bg_highlight = \"#292E42\"  # Active/hover background\n_snack_bar_theme_config = flet.SnackBarTheme(\n    bgcolor=tn_bg_highlight,  # Consistent with primary_container\n    content_text_style=flet.TextStyle(\n        color=tn_storm_fg, font_family=\"Fira Code, Consolas, monospace\", size=14",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "tn_pink",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "tn_pink = \"#F7768E\"  # Red/Pink\ntn_purple = \"#BB9AF7\"\ntn_yellow = \"#E0AF68\"\ntn_bg_dark = \"#1F2335\"  # Darker background for UI elements like status bar\ntn_bg_highlight = \"#292E42\"  # Active/hover background\n_snack_bar_theme_config = flet.SnackBarTheme(\n    bgcolor=tn_bg_highlight,  # Consistent with primary_container\n    content_text_style=flet.TextStyle(\n        color=tn_storm_fg, font_family=\"Fira Code, Consolas, monospace\", size=14\n    ),",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "tn_purple",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "tn_purple = \"#BB9AF7\"\ntn_yellow = \"#E0AF68\"\ntn_bg_dark = \"#1F2335\"  # Darker background for UI elements like status bar\ntn_bg_highlight = \"#292E42\"  # Active/hover background\n_snack_bar_theme_config = flet.SnackBarTheme(\n    bgcolor=tn_bg_highlight,  # Consistent with primary_container\n    content_text_style=flet.TextStyle(\n        color=tn_storm_fg, font_family=\"Fira Code, Consolas, monospace\", size=14\n    ),\n    action_text_color=tn_blue,  # Primary color for actions",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "tn_yellow",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "tn_yellow = \"#E0AF68\"\ntn_bg_dark = \"#1F2335\"  # Darker background for UI elements like status bar\ntn_bg_highlight = \"#292E42\"  # Active/hover background\n_snack_bar_theme_config = flet.SnackBarTheme(\n    bgcolor=tn_bg_highlight,  # Consistent with primary_container\n    content_text_style=flet.TextStyle(\n        color=tn_storm_fg, font_family=\"Fira Code, Consolas, monospace\", size=14\n    ),\n    action_text_color=tn_blue,  # Primary color for actions\n    elevation=1,",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "tn_bg_dark",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "tn_bg_dark = \"#1F2335\"  # Darker background for UI elements like status bar\ntn_bg_highlight = \"#292E42\"  # Active/hover background\n_snack_bar_theme_config = flet.SnackBarTheme(\n    bgcolor=tn_bg_highlight,  # Consistent with primary_container\n    content_text_style=flet.TextStyle(\n        color=tn_storm_fg, font_family=\"Fira Code, Consolas, monospace\", size=14\n    ),\n    action_text_color=tn_blue,  # Primary color for actions\n    elevation=1,\n)",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "tn_bg_highlight",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "tn_bg_highlight = \"#292E42\"  # Active/hover background\n_snack_bar_theme_config = flet.SnackBarTheme(\n    bgcolor=tn_bg_highlight,  # Consistent with primary_container\n    content_text_style=flet.TextStyle(\n        color=tn_storm_fg, font_family=\"Fira Code, Consolas, monospace\", size=14\n    ),\n    action_text_color=tn_blue,  # Primary color for actions\n    elevation=1,\n)\n_app_bar_theme_config = flet.AppBarTheme(",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "_snack_bar_theme_config",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "_snack_bar_theme_config = flet.SnackBarTheme(\n    bgcolor=tn_bg_highlight,  # Consistent with primary_container\n    content_text_style=flet.TextStyle(\n        color=tn_storm_fg, font_family=\"Fira Code, Consolas, monospace\", size=14\n    ),\n    action_text_color=tn_blue,  # Primary color for actions\n    elevation=1,\n)\n_app_bar_theme_config = flet.AppBarTheme(\n    bgcolor=tn_bg_dark,  # Darkest bg for app bar",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "_app_bar_theme_config",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "_app_bar_theme_config = flet.AppBarTheme(\n    bgcolor=tn_bg_dark,  # Darkest bg for app bar\n    color=tn_storm_fg,\n    elevation=0,\n)\nTOKYO_NIGHT_STORM_THEME = flet.Theme(\n    color_scheme=flet.ColorScheme(\n        primary=tn_blue,\n        primary_container=tn_bg_highlight,\n        secondary=tn_purple,",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "TOKYO_NIGHT_STORM_THEME",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "TOKYO_NIGHT_STORM_THEME = flet.Theme(\n    color_scheme=flet.ColorScheme(\n        primary=tn_blue,\n        primary_container=tn_bg_highlight,\n        secondary=tn_purple,\n        secondary_container=tn_bg_highlight,\n        surface=tn_storm_bg,\n        surface_variant=tn_bg_dark,  # Darker variant for cards\n        on_surface=tn_storm_fg,\n        outline=tn_comment,",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "THEME",
        "kind": 5,
        "importPath": "themes.tokyo_night",
        "description": "themes.tokyo_night",
        "peekOfCode": "THEME = TOKYO_NIGHT_STORM_THEME",
        "detail": "themes.tokyo_night",
        "documentation": {}
    },
    {
        "label": "MockPage",
        "kind": 6,
        "importPath": "debug_app",
        "description": "debug_app",
        "peekOfCode": "class MockPage(ft.Page):\n    \"\"\"Mock version of flet.Page for testing without UI\"\"\"\n    def __init__(self, conn=None, session_id=None, loop=None):  # Add parameters\n        if conn is None:\n            conn = MagicMock()\n            conn.pubsubhub = MagicMock()  # Ensure pubsubhub is also a mock\n        super().__init__(\n            conn=conn, session_id=session_id, loop=loop\n        )  # Pass them to super\n        self.theme = None",
        "detail": "debug_app",
        "documentation": {}
    },
    {
        "label": "AppDebugger",
        "kind": 6,
        "importPath": "debug_app",
        "description": "debug_app",
        "peekOfCode": "class AppDebugger:\n    def __init__(self, use_mock=True):\n        self.logger = logging.getLogger(\"AppDebugger\")\n        self.logger.setLevel(logging.DEBUG)  # Explicitly set level\n        self.logger.info(\"Initializing AppDebugger\")\n        # Setup data directories for testing\n        self.test_data_dir = Path(\"debug_data\")\n        self.test_data_dir.mkdir(exist_ok=True)\n        self.logger.info(\"Test data directory ensured.\")  # Log point A\n        # Create mock page or use real page",
        "detail": "debug_app",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "debug_app",
        "description": "debug_app",
        "peekOfCode": "def main():\n    parser = argparse.ArgumentParser(description=\"StudyOS Application Debugger\")\n    parser.add_argument(\n        \"--mode\",\n        choices=[\"mock\", \"interactive\", \"visual\"],\n        default=\"interactive\",\n        help=\"Debug mode: mock (headless tests), interactive (CLI menu), visual (with Flet UI)\",\n    )\n    args = parser.parse_args()\n    logger.info(f\"Starting debugger in {args.mode} mode\")",
        "detail": "debug_app",
        "documentation": {}
    },
    {
        "label": "log_file_path",
        "kind": 5,
        "importPath": "debug_app",
        "description": "debug_app",
        "peekOfCode": "log_file_path = Path(__file__).resolve().parent / \"debug.log\"\n# Setup logging\ntry:\n    logging.basicConfig(\n        level=logging.DEBUG,\n        format=\"%(asctime)s [%(levelname)s] %(name)s: %(message)s\",\n        handlers=[logging.FileHandler(log_file_path), logging.StreamHandler()],\n    )\n    logger = logging.getLogger(\"StudyOSDebugger\")\n    logger.info(f\"Logging setup complete. Log file should be at: {log_file_path}\")",
        "detail": "debug_app",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def main(page: Page):\n    # Initialize StudyOS. It will handle its own theme_manager and modules.\n    study_app = StudyOS(page=page)\n    # The StudyOS instance will set up the UI, including navigation and initial module view.\n    # No need to manually call _init_ui or _setup_window_config if StudyOS.__init__ handles it.\n    # If StudyOS needs an explicit startup method, that would be called here.\n    # For example, if StudyOS had a method like `study_app.start()`\n    # The application runs via ft.app(target=main_function_for_flet)\n    # The main function provided to ft.app should orchestrate the app setup.\n    # In this case, StudyOS instantiation within this main(page: Page) function",
        "detail": "main",
        "documentation": {}
    }
]